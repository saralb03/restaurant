{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const express = require(\"express\");\nconst path = require(\"path\");\nconst http = require(\"http\");\nconst cors = require(\"cors\");\nconst fileUpload = require(\"express-fileupload\");\n\n// const config = require(\"./routes/config_routes\"); // Ensure correct path\nconst config = require(\"./routes/routes\"); // Ensure correct path\n\nrequire(\"./db/mongoconnect\");\nconst app = express();\napp.use(cors());\napp.use(fileUpload({\n  limits: {\n    fileSize: 1024 * 1024 * 5\n  }\n}));\napp.use(express.json());\napp.use(express.static(path.join(__dirname, \"public\")));\napp.use(\"/\", config); // Use\n// routesInit(app); // Use the routesInit function\n\nconst server = http.createServer(app);\nconst port = process.env.PORT || 3001;\nserver.listen(port, () => {\n  console.log(`Server is running on http://localhost:${port}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInBhdGgiLCJodHRwIiwiY29ycyIsImZpbGVVcGxvYWQiLCJjb25maWciLCJhcHAiLCJ1c2UiLCJsaW1pdHMiLCJmaWxlU2l6ZSIsImpzb24iLCJzdGF0aWMiLCJqb2luIiwiX19kaXJuYW1lIiwic2VydmVyIiwiY3JlYXRlU2VydmVyIiwicG9ydCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIYWRhcy0wM1xcRG9jdW1lbnRzXFxmdWxsc3RhY2tcXGJhY2tcXCIsInNvdXJjZXMiOlsiYXBwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcclxuY29uc3QgcGF0aCA9IHJlcXVpcmUoXCJwYXRoXCIpO1xyXG5jb25zdCBodHRwID0gcmVxdWlyZShcImh0dHBcIik7XHJcbmNvbnN0IGNvcnMgPSByZXF1aXJlKFwiY29yc1wiKTtcclxuY29uc3QgZmlsZVVwbG9hZCA9IHJlcXVpcmUoXCJleHByZXNzLWZpbGV1cGxvYWRcIik7XHJcblxyXG5cclxuLy8gY29uc3QgY29uZmlnID0gcmVxdWlyZShcIi4vcm91dGVzL2NvbmZpZ19yb3V0ZXNcIik7IC8vIEVuc3VyZSBjb3JyZWN0IHBhdGhcclxuY29uc3QgY29uZmlnID0gcmVxdWlyZShcIi4vcm91dGVzL3JvdXRlc1wiKTsgLy8gRW5zdXJlIGNvcnJlY3QgcGF0aFxyXG5cclxucmVxdWlyZShcIi4vZGIvbW9uZ29jb25uZWN0XCIpO1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuYXBwLnVzZShjb3JzKCkpO1xyXG5hcHAudXNlKGZpbGVVcGxvYWQoeyBsaW1pdHM6IHsgZmlsZVNpemU6IDEwMjQgKiAxMDI0ICogNSB9IH0pKTtcclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgXCJwdWJsaWNcIikpKTtcclxuXHJcbmFwcC51c2UoXCIvXCIsIGNvbmZpZyk7IC8vIFVzZVxyXG4vLyByb3V0ZXNJbml0KGFwcCk7IC8vIFVzZSB0aGUgcm91dGVzSW5pdCBmdW5jdGlvblxyXG5cclxuY29uc3Qgc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKTtcclxuXHJcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDE7XHJcbnNlcnZlci5saXN0ZW4ocG9ydCwgKCkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKGBTZXJ2ZXIgaXMgcnVubmluZyBvbiBodHRwOi8vbG9jYWxob3N0OiR7cG9ydH1gKTtcclxufSk7Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFTLENBQUM7QUFDbEMsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBTSxDQUFDO0FBQzVCLE1BQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUM1QixNQUFNRyxJQUFJLEdBQUdILE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDNUIsTUFBTUksVUFBVSxHQUFHSixPQUFPLENBQUMsb0JBQW9CLENBQUM7O0FBR2hEO0FBQ0EsTUFBTUssTUFBTSxHQUFHTCxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDOztBQUUzQ0EsT0FBTyxDQUFDLG1CQUFtQixDQUFDO0FBRTVCLE1BQU1NLEdBQUcsR0FBR1AsT0FBTyxDQUFDLENBQUM7QUFFckJPLEdBQUcsQ0FBQ0MsR0FBRyxDQUFDSixJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ2ZHLEdBQUcsQ0FBQ0MsR0FBRyxDQUFDSCxVQUFVLENBQUM7RUFBRUksTUFBTSxFQUFFO0lBQUVDLFFBQVEsRUFBRSxJQUFJLEdBQUcsSUFBSSxHQUFHO0VBQUU7QUFBRSxDQUFDLENBQUMsQ0FBQztBQUM5REgsR0FBRyxDQUFDQyxHQUFHLENBQUNSLE9BQU8sQ0FBQ1csSUFBSSxDQUFDLENBQUMsQ0FBQztBQUN2QkosR0FBRyxDQUFDQyxHQUFHLENBQUNSLE9BQU8sQ0FBQ1ksTUFBTSxDQUFDVixJQUFJLENBQUNXLElBQUksQ0FBQ0MsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFFdkRQLEdBQUcsQ0FBQ0MsR0FBRyxDQUFDLEdBQUcsRUFBRUYsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUN0Qjs7QUFFQSxNQUFNUyxNQUFNLEdBQUdaLElBQUksQ0FBQ2EsWUFBWSxDQUFDVCxHQUFHLENBQUM7QUFFckMsTUFBTVUsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsSUFBSSxJQUFJLElBQUk7QUFDckNMLE1BQU0sQ0FBQ00sTUFBTSxDQUFDSixJQUFJLEVBQUUsTUFBTTtFQUN4QkssT0FBTyxDQUFDQyxHQUFHLENBQUUseUNBQXdDTixJQUFLLEVBQUMsQ0FBQztBQUM5RCxDQUFDLENBQUMifQ==","map":{"version":3,"names":["express","require","path","http","cors","fileUpload","config","app","use","limits","fileSize","json","static","join","__dirname","server","createServer","port","process","env","PORT","listen","console","log"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\","sources":["app.js"],"sourcesContent":["const express = require(\"express\");\r\nconst path = require(\"path\");\r\nconst http = require(\"http\");\r\nconst cors = require(\"cors\");\r\nconst fileUpload = require(\"express-fileupload\");\r\n\r\n\r\n// const config = require(\"./routes/config_routes\"); // Ensure correct path\r\nconst config = require(\"./routes/routes\"); // Ensure correct path\r\n\r\nrequire(\"./db/mongoconnect\");\r\n\r\nconst app = express();\r\n\r\napp.use(cors());\r\napp.use(fileUpload({ limits: { fileSize: 1024 * 1024 * 5 } }));\r\napp.use(express.json());\r\napp.use(express.static(path.join(__dirname, \"public\")));\r\n\r\napp.use(\"/\", config); // Use\r\n// routesInit(app); // Use the routesInit function\r\n\r\nconst server = http.createServer(app);\r\n\r\nconst port = process.env.PORT || 3001;\r\nserver.listen(port, () => {\r\n  console.log(`Server is running on http://localhost:${port}`);\r\n});"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMI,UAAU,GAAGJ,OAAO,CAAC,oBAAoB,CAAC;;AAGhD;AACA,MAAMK,MAAM,GAAGL,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;;AAE3CA,OAAO,CAAC,mBAAmB,CAAC;AAE5B,MAAMM,GAAG,GAAGP,OAAO,CAAC,CAAC;AAErBO,GAAG,CAACC,GAAG,CAACJ,IAAI,CAAC,CAAC,CAAC;AACfG,GAAG,CAACC,GAAG,CAACH,UAAU,CAAC;EAAEI,MAAM,EAAE;IAAEC,QAAQ,EAAE,IAAI,GAAG,IAAI,GAAG;EAAE;AAAE,CAAC,CAAC,CAAC;AAC9DH,GAAG,CAACC,GAAG,CAACR,OAAO,CAACW,IAAI,CAAC,CAAC,CAAC;AACvBJ,GAAG,CAACC,GAAG,CAACR,OAAO,CAACY,MAAM,CAACV,IAAI,CAACW,IAAI,CAACC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC;AAEvDP,GAAG,CAACC,GAAG,CAAC,GAAG,EAAEF,MAAM,CAAC,CAAC,CAAC;AACtB;;AAEA,MAAMS,MAAM,GAAGZ,IAAI,CAACa,YAAY,CAACT,GAAG,CAAC;AAErC,MAAMU,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;AACrCL,MAAM,CAACM,MAAM,CAACJ,IAAI,EAAE,MAAM;EACxBK,OAAO,CAACC,GAAG,CAAE,yCAAwCN,IAAK,EAAC,CAAC;AAC9D,CAAC,CAAC"}},"mtime":1706010413481},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\routes\\\\config_routes.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst {\n  RestaurantBookingSystem\n} = require('../models/RestaurantBookingSystem');\nconst {\n  RestaurantModel,\n  validateRestaurant\n} = require('../models/RestaurantModel');\nconst bookingSystem = new RestaurantBookingSystem();\nrouter.get(\"/\", (req, res) => {\n  res.json({\n    msg: \"resturant work\"\n  });\n});\nrouter.post('/add-table/:restaurantId', async (req, res) => {\n  try {\n    const {\n      restaurantId\n    } = req.params;\n    const {\n      capacity\n    } = req.body;\n    await bookingSystem.addTable(capacity, restaurantId);\n    res.json({\n      message: 'Table added successfully'\n    });\n  } catch (error) {\n    console.error('Error adding table:', error.message);\n    res.status(500).json({\n      error: 'Internal Server Error'\n    });\n  }\n});\nrouter.post('/make-reservation/:restaurantId/:tableId', async (req, res) => {\n  try {\n    const {\n      restaurantId,\n      tableId\n    } = req.params;\n    const {\n      customerName,\n      reservationTime\n    } = req.body;\n    await bookingSystem.makeReservation(restaurantId, tableId, customerName, reservationTime);\n    res.json({\n      message: 'Reservation successful'\n    });\n  } catch (error) {\n    console.error('Error making reservation:', error.message);\n    res.status(500).json({\n      error: 'Internal Server Error'\n    });\n  }\n});\n\n// Update the route definition to use query parameters\nrouter.get('/available-tables', async (req, res) => {\n  try {\n    const {\n      restaurantId\n    } = req.query;\n    const {\n      date,\n      time\n    } = req.query;\n    const availableTables = await bookingSystem.getAvailableTables(restaurantId, date, time);\n    res.json(availableTables);\n  } catch (error) {\n    console.error('Error getting available tables:', error.message);\n    res.status(500).json({\n      error: 'Internal Server Error'\n    });\n  }\n});\nrouter.get('/restaurants', async (req, res) => {\n  try {\n    const restaurants = await RestaurantModel.find();\n    res.json(restaurants);\n  } catch (error) {\n    console.error('Error getting restaurants:', error.message);\n    res.status(500).json({\n      error: 'Internal Server Error'\n    });\n  }\n});\nrouter.post('/register', async (req, res) => {\n  try {\n    const {\n      error\n    } = validateRestaurant(req.body);\n    if (error) {\n      return res.status(400).json({\n        error: error.details[0].message\n      });\n    }\n    const {\n      name,\n      email,\n      address,\n      phone,\n      psw,\n      hoursOfOperation\n    } = req.body;\n\n    // Check if the email is already in use\n    const existingRestaurant = await RestaurantModel.findOne({\n      email\n    });\n    if (existingRestaurant) {\n      return res.status(400).json({\n        error: 'Email is already in use'\n      });\n    }\n\n    // Add the restaurant\n    const newRestaurant = new RestaurantModel({\n      name,\n      email,\n      address,\n      phone,\n      psw,\n      hoursOfOperation\n    });\n    await newRestaurant.save();\n    res.status(201).json({\n      message: 'Restaurant registered successfully'\n    });\n  } catch (error) {\n    console.error('Error in registration:', error.message);\n    res.status(500).json({\n      error: 'Internal Server Error'\n    });\n  }\n});\n\n// login Route\nrouter.post('/login', async (req, res) => {\n  try {\n    const {\n      email,\n      psw\n    } = req.body;\n\n    // Check if the email exists\n    const restaurant = await RestaurantModel.findOne({\n      email\n    }).select('psw');\n    if (!restaurant) {\n      return res.status(401).json({\n        error: 'Invalid email or password'\n      });\n    }\n\n    // Check if the password is correct\n    const passwordMatch = await restaurant.checkPassword(psw);\n    if (!passwordMatch) {\n      return res.status(401).json({\n        error: 'Invalid email or password'\n      });\n    }\n\n    // Generate a JWT token\n    const token = restaurant.generateAuthToken();\n    res.json({\n      token\n    });\n  } catch (error) {\n    console.error('Error in login:', error.message);\n    res.status(500).json({\n      error: 'Internal Server Error'\n    });\n  }\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","router","Router","RestaurantBookingSystem","RestaurantModel","validateRestaurant","bookingSystem","get","req","res","json","msg","post","restaurantId","params","capacity","body","addTable","message","error","console","status","tableId","customerName","reservationTime","makeReservation","query","date","time","availableTables","getAvailableTables","restaurants","find","details","name","email","address","phone","psw","hoursOfOperation","existingRestaurant","findOne","newRestaurant","save","restaurant","select","passwordMatch","checkPassword","token","generateAuthToken","module","exports"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\routes\\","sources":["config_routes.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst { RestaurantBookingSystem } = require('../models/RestaurantBookingSystem');\nconst { RestaurantModel, validateRestaurant } = require('../models/RestaurantModel');\n\nconst bookingSystem = new RestaurantBookingSystem();\n\nrouter.get(\"/\", (req, res) => {\n  res.json({ msg: \"resturant work\" });\n});\n\nrouter.post('/add-table/:restaurantId', async (req, res) => {\n  try {\n    const { restaurantId } = req.params;\n    const { capacity } = req.body;\n    await bookingSystem.addTable(capacity, restaurantId);\n    res.json({ message: 'Table added successfully' });\n  } catch (error) {\n    console.error('Error adding table:', error.message);\n    res.status(500).json({ error: 'Internal Server Error' });\n  }\n});\n\nrouter.post('/make-reservation/:restaurantId/:tableId', async (req, res) => {\n  try {\n    const { restaurantId, tableId } = req.params;\n    const { customerName, reservationTime } = req.body;\n    await bookingSystem.makeReservation(restaurantId, tableId, customerName, reservationTime);\n    res.json({ message: 'Reservation successful' });\n  } catch (error) {\n    console.error('Error making reservation:', error.message);\n    res.status(500).json({ error: 'Internal Server Error' });\n  }\n});\n\n// Update the route definition to use query parameters\nrouter.get('/available-tables', async (req, res) => {\n  try {\n    const { restaurantId } = req.query;\n    const { date, time } = req.query;\n    const availableTables = await bookingSystem.getAvailableTables(restaurantId, date, time);\n    res.json(availableTables);\n  } catch (error) {\n    console.error('Error getting available tables:', error.message);\n    res.status(500).json({ error: 'Internal Server Error' });\n  }\n});\n\nrouter.get('/restaurants', async (req, res) => { \n  try {\n    const restaurants = await RestaurantModel.find();\n    res.json(restaurants);\n  } catch (error) {\n    console.error('Error getting restaurants:', error.message);\n    res.status(500).json({ error: 'Internal Server Error' });\n  }\n});\n\nrouter.post('/register', async (req, res) => {\n  try {\n      const { error } = validateRestaurant(req.body);\n      if (error) {\n          return res.status(400).json({ error: error.details[0].message });\n      }\n\n      const { name, email, address, phone, psw, hoursOfOperation } = req.body;\n\n      // Check if the email is already in use\n      const existingRestaurant = await RestaurantModel.findOne({ email });\n      if (existingRestaurant) {\n          return res.status(400).json({ error: 'Email is already in use' });\n      }\n\n      // Add the restaurant\n      const newRestaurant = new RestaurantModel({\n          name,\n          email,\n          address,\n          phone,\n          psw,\n          hoursOfOperation,\n      });\n      await newRestaurant.save();\n\n      res.status(201).json({ message: 'Restaurant registered successfully' });\n  } catch (error) {\n      console.error('Error in registration:', error.message);\n      res.status(500).json({ error: 'Internal Server Error' });\n  }\n});\n\n// login Route\nrouter.post('/login', async (req, res) => {\n  try {\n      const { email, psw } = req.body;\n\n      // Check if the email exists\n      const restaurant = await RestaurantModel.findOne({ email }).select('psw');\n      if (!restaurant) {\n          return res.status(401).json({ error: 'Invalid email or password' });\n      }\n\n      // Check if the password is correct\n      const passwordMatch = await restaurant.checkPassword(psw);\n      if (!passwordMatch) {\n          return res.status(401).json({ error: 'Invalid email or password' });\n      }\n\n      // Generate a JWT token\n      const token = restaurant.generateAuthToken();\n\n      res.json({ token });\n  } catch (error) {\n      console.error('Error in login:', error.message);\n      res.status(500).json({ error: 'Internal Server Error' });\n  }\n});\n\nmodule.exports = router;\n"],"mappings":"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"}},"mtime":1706006673449},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\middlewares\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\middlewares\\\\auth.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const jwt = require(\"jsonwebtoken\");\nconst {\n  config\n} = require(\"../config/secret\");\nexports.auth = (req, res, next) => {\n  let token = req.header(\"x-api-key\");\n  if (!token) {\n    return res.status(401).json({\n      msg: \"You need to send token to this endpoint\"\n    });\n  }\n  try {\n    let decodeToken = jwt.verify(token, config.tokenSecret);\n    req.tokenData = decodeToken;\n    next();\n  } catch (err) {\n    console.log(err);\n    return res.status(401).json({\n      msg: \"Token invalid or expired, log in again\"\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwiY29uZmlnIiwiZXhwb3J0cyIsImF1dGgiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJoZWFkZXIiLCJzdGF0dXMiLCJqc29uIiwibXNnIiwiZGVjb2RlVG9rZW4iLCJ2ZXJpZnkiLCJ0b2tlblNlY3JldCIsInRva2VuRGF0YSIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSGFkYXMtMDNcXERvY3VtZW50c1xcZnVsbHN0YWNrXFxiYWNrXFxtaWRkbGV3YXJlc1xcIiwic291cmNlcyI6WyJhdXRoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGp3dCA9IHJlcXVpcmUoXCJqc29ud2VidG9rZW5cIik7XG5jb25zdCB7Y29uZmlnfSA9IHJlcXVpcmUoXCIuLi9jb25maWcvc2VjcmV0XCIpXG5cbmV4cG9ydHMuYXV0aCA9IChyZXEscmVzLG5leHQpID0+IHtcbiAgbGV0IHRva2VuID0gcmVxLmhlYWRlcihcIngtYXBpLWtleVwiKTtcbiAgaWYoIXRva2VuKXtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe21zZzpcIllvdSBuZWVkIHRvIHNlbmQgdG9rZW4gdG8gdGhpcyBlbmRwb2ludFwifSlcbiAgfVxuICB0cnl7XG4gICAgbGV0IGRlY29kZVRva2VuID0gand0LnZlcmlmeSh0b2tlbixjb25maWcudG9rZW5TZWNyZXQpO1xuICAgIHJlcS50b2tlbkRhdGEgPSBkZWNvZGVUb2tlbjtcbiAgICBuZXh0KCk7XG4gIH1cbiAgY2F0Y2goZXJyKXtcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7bXNnOlwiVG9rZW4gaW52YWxpZCBvciBleHBpcmVkLCBsb2cgaW4gYWdhaW5cIn0pXG4gIH1cbn1cblxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFDbkMsTUFBTTtFQUFDQztBQUFNLENBQUMsR0FBR0QsT0FBTyxDQUFDLGtCQUFrQixDQUFDO0FBRTVDRSxPQUFPLENBQUNDLElBQUksR0FBRyxDQUFDQyxHQUFHLEVBQUNDLEdBQUcsRUFBQ0MsSUFBSSxLQUFLO0VBQy9CLElBQUlDLEtBQUssR0FBR0gsR0FBRyxDQUFDSSxNQUFNLENBQUMsV0FBVyxDQUFDO0VBQ25DLElBQUcsQ0FBQ0QsS0FBSyxFQUFDO0lBQ1IsT0FBT0YsR0FBRyxDQUFDSSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztNQUFDQyxHQUFHLEVBQUM7SUFBeUMsQ0FBQyxDQUFDO0VBQzlFO0VBQ0EsSUFBRztJQUNELElBQUlDLFdBQVcsR0FBR2IsR0FBRyxDQUFDYyxNQUFNLENBQUNOLEtBQUssRUFBQ04sTUFBTSxDQUFDYSxXQUFXLENBQUM7SUFDdERWLEdBQUcsQ0FBQ1csU0FBUyxHQUFHSCxXQUFXO0lBQzNCTixJQUFJLENBQUMsQ0FBQztFQUNSLENBQUMsQ0FDRCxPQUFNVSxHQUFHLEVBQUM7SUFDUkMsT0FBTyxDQUFDQyxHQUFHLENBQUNGLEdBQUcsQ0FBQztJQUNoQixPQUFPWCxHQUFHLENBQUNJLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDO01BQUNDLEdBQUcsRUFBQztJQUF3QyxDQUFDLENBQUM7RUFDN0U7QUFDRixDQUFDIn0=","map":{"version":3,"names":["jwt","require","config","exports","auth","req","res","next","token","header","status","json","msg","decodeToken","verify","tokenSecret","tokenData","err","console","log"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\middlewares\\","sources":["auth.js"],"sourcesContent":["const jwt = require(\"jsonwebtoken\");\nconst {config} = require(\"../config/secret\")\n\nexports.auth = (req,res,next) => {\n  let token = req.header(\"x-api-key\");\n  if(!token){\n    return res.status(401).json({msg:\"You need to send token to this endpoint\"})\n  }\n  try{\n    let decodeToken = jwt.verify(token,config.tokenSecret);\n    req.tokenData = decodeToken;\n    next();\n  }\n  catch(err){\n    console.log(err);\n    return res.status(401).json({msg:\"Token invalid or expired, log in again\"})\n  }\n}\n\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAc,CAAC;AACnC,MAAM;EAACC;AAAM,CAAC,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAE5CE,OAAO,CAACC,IAAI,GAAG,CAACC,GAAG,EAACC,GAAG,EAACC,IAAI,KAAK;EAC/B,IAAIC,KAAK,GAAGH,GAAG,CAACI,MAAM,CAAC,WAAW,CAAC;EACnC,IAAG,CAACD,KAAK,EAAC;IACR,OAAOF,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAACC,GAAG,EAAC;IAAyC,CAAC,CAAC;EAC9E;EACA,IAAG;IACD,IAAIC,WAAW,GAAGb,GAAG,CAACc,MAAM,CAACN,KAAK,EAACN,MAAM,CAACa,WAAW,CAAC;IACtDV,GAAG,CAACW,SAAS,GAAGH,WAAW;IAC3BN,IAAI,CAAC,CAAC;EACR,CAAC,CACD,OAAMU,GAAG,EAAC;IACRC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,OAAOX,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAACC,GAAG,EAAC;IAAwC,CAAC,CAAC;EAC7E;AACF,CAAC"}},"mtime":1706600878117},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\config\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\config\\\\secret.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"require(\"dotenv\").config();\nexports.config = {\n  userDb: process.env.USER_DB,\n  passDb: process.env.PASS_DB,\n  tokenSecret: process.env.TOKEN_SECRET,\n  port: process.env.PORT\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiZXhwb3J0cyIsInVzZXJEYiIsInByb2Nlc3MiLCJlbnYiLCJVU0VSX0RCIiwicGFzc0RiIiwiUEFTU19EQiIsInRva2VuU2VjcmV0IiwiVE9LRU5fU0VDUkVUIiwicG9ydCIsIlBPUlQiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSGFkYXMtMDNcXERvY3VtZW50c1xcZnVsbHN0YWNrXFxiYWNrXFxjb25maWdcXCIsInNvdXJjZXMiOlsic2VjcmV0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoXCJkb3RlbnZcIikuY29uZmlnKClcblxuXG5leHBvcnRzLmNvbmZpZyA9IHtcbiAgICB1c2VyRGI6cHJvY2Vzcy5lbnYuVVNFUl9EQixcbiAgICBwYXNzRGI6cHJvY2Vzcy5lbnYuUEFTU19EQixcbiAgICB0b2tlblNlY3JldDpwcm9jZXNzLmVudi5UT0tFTl9TRUNSRVQsXG4gICAgcG9ydDpwcm9jZXNzLmVudi5QT1JUXG59Il0sIm1hcHBpbmdzIjoiQUFBQUEsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDQyxNQUFNLENBQUMsQ0FBQztBQUcxQkMsT0FBTyxDQUFDRCxNQUFNLEdBQUc7RUFDYkUsTUFBTSxFQUFDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsT0FBTztFQUMxQkMsTUFBTSxFQUFDSCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0csT0FBTztFQUMxQkMsV0FBVyxFQUFDTCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0ssWUFBWTtFQUNwQ0MsSUFBSSxFQUFDUCxPQUFPLENBQUNDLEdBQUcsQ0FBQ087QUFDckIsQ0FBQyJ9","map":{"version":3,"names":["require","config","exports","userDb","process","env","USER_DB","passDb","PASS_DB","tokenSecret","TOKEN_SECRET","port","PORT"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\config\\","sources":["secret.js"],"sourcesContent":["require(\"dotenv\").config()\n\n\nexports.config = {\n    userDb:process.env.USER_DB,\n    passDb:process.env.PASS_DB,\n    tokenSecret:process.env.TOKEN_SECRET,\n    port:process.env.PORT\n}"],"mappings":"AAAAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC;AAG1BC,OAAO,CAACD,MAAM,GAAG;EACbE,MAAM,EAACC,OAAO,CAACC,GAAG,CAACC,OAAO;EAC1BC,MAAM,EAACH,OAAO,CAACC,GAAG,CAACG,OAAO;EAC1BC,WAAW,EAACL,OAAO,CAACC,GAAG,CAACK,YAAY;EACpCC,IAAI,EAACP,OAAO,CAACC,GAAG,CAACO;AACrB,CAAC"}},"mtime":1705907396201},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\utils\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\utils\\\\asyncWrapper.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const asyncWrap = fn => {\n  return (req, res, next) => {\n    fn(req, res, next).catch(next);\n  };\n};\nmodule.exports = asyncWrap;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3luY1dyYXAiLCJmbiIsInJlcSIsInJlcyIsIm5leHQiLCJjYXRjaCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSGFkYXMtMDNcXERvY3VtZW50c1xcZnVsbHN0YWNrXFxiYWNrXFx1dGlsc1xcIiwic291cmNlcyI6WyJhc3luY1dyYXBwZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXN5bmNXcmFwID0gKGZuKSA9PiB7XG4gIHJldHVybiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICBmbihyZXEsIHJlcywgbmV4dCkuY2F0Y2gobmV4dCk7XG4gIH07XG59O1xubW9kdWxlLmV4cG9ydHMgPSBhc3luY1dyYXA7XG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFNBQVMsR0FBSUMsRUFBRSxJQUFLO0VBQ3hCLE9BQU8sQ0FBQ0MsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLElBQUksS0FBSztJQUN6QkgsRUFBRSxDQUFDQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsSUFBSSxDQUFDLENBQUNDLEtBQUssQ0FBQ0QsSUFBSSxDQUFDO0VBQ2hDLENBQUM7QUFDSCxDQUFDO0FBQ0RFLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHUCxTQUFTIn0=","map":{"version":3,"names":["asyncWrap","fn","req","res","next","catch","module","exports"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\utils\\","sources":["asyncWrapper.js"],"sourcesContent":["const asyncWrap = (fn) => {\n  return (req, res, next) => {\n    fn(req, res, next).catch(next);\n  };\n};\nmodule.exports = asyncWrap;\n"],"mappings":"AAAA,MAAMA,SAAS,GAAIC,EAAE,IAAK;EACxB,OAAO,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;IACzBH,EAAE,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAACC,KAAK,CAACD,IAAI,CAAC;EAChC,CAAC;AACH,CAAC;AACDE,MAAM,CAACC,OAAO,GAAGP,SAAS"}},"mtime":1705908231512},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\utils\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\utils\\\\jwt.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const jwt = require(\"jsonwebtoken\");\n\n/**\n *\n * @param {object} payload\n * @returns {string}\n *\n */\n\nexports.generateToken = payload => {\n  try {\n    const token = jwt.sign({\n      ...payload\n    }, process.env.JWT_SECRET, {\n      expiresIn: process.env.JWT_EXPIRES_IN\n    });\n    return token;\n  } catch (error) {\n    throw Error(error.message);\n  }\n};\n\n/**\n *\n * @param {string} token\n * @returns {object}\n */\n\nexports.decodeToken = token => {\n  try {\n    const payload = jwt.verify(token, jwtSecret); //vs decode\n    return payload;\n  } catch (error) {\n    throw Error(error.message);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwiZXhwb3J0cyIsImdlbmVyYXRlVG9rZW4iLCJwYXlsb2FkIiwidG9rZW4iLCJzaWduIiwicHJvY2VzcyIsImVudiIsIkpXVF9TRUNSRVQiLCJleHBpcmVzSW4iLCJKV1RfRVhQSVJFU19JTiIsImVycm9yIiwiRXJyb3IiLCJtZXNzYWdlIiwiZGVjb2RlVG9rZW4iLCJ2ZXJpZnkiLCJqd3RTZWNyZXQiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSGFkYXMtMDNcXERvY3VtZW50c1xcZnVsbHN0YWNrXFxiYWNrXFx1dGlsc1xcIiwic291cmNlcyI6WyJqd3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID0gcmVxdWlyZShcImpzb253ZWJ0b2tlblwiKTtcblxuLyoqXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHBheWxvYWRcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKlxuICovXG5cbmV4cG9ydHMuZ2VuZXJhdGVUb2tlbiA9IChwYXlsb2FkKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgdG9rZW4gPSBqd3Quc2lnbih7IC4uLnBheWxvYWQgfSwgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCwge1xuICAgICAgZXhwaXJlc0luOiBwcm9jZXNzLmVudi5KV1RfRVhQSVJFU19JTixcbiAgICB9KTtcbiAgICByZXR1cm4gdG9rZW47XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgdGhyb3cgRXJyb3IoZXJyb3IubWVzc2FnZSk7XG4gIH1cbn07XG5cbi8qKlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB0b2tlblxuICogQHJldHVybnMge29iamVjdH1cbiAqL1xuXG5leHBvcnRzLmRlY29kZVRva2VuID0gKHRva2VuKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcGF5bG9hZCA9IGp3dC52ZXJpZnkodG9rZW4sIGp3dFNlY3JldCk7IC8vdnMgZGVjb2RlXG4gICAgcmV0dXJuIHBheWxvYWQ7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgdGhyb3cgRXJyb3IoZXJyb3IubWVzc2FnZSk7XG4gIH1cbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQWMsQ0FBQzs7QUFFbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBQyxPQUFPLENBQUNDLGFBQWEsR0FBSUMsT0FBTyxJQUFLO0VBQ25DLElBQUk7SUFDRixNQUFNQyxLQUFLLEdBQUdMLEdBQUcsQ0FBQ00sSUFBSSxDQUFDO01BQUUsR0FBR0Y7SUFBUSxDQUFDLEVBQUVHLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxVQUFVLEVBQUU7TUFDN0RDLFNBQVMsRUFBRUgsT0FBTyxDQUFDQyxHQUFHLENBQUNHO0lBQ3pCLENBQUMsQ0FBQztJQUNGLE9BQU9OLEtBQUs7RUFDZCxDQUFDLENBQUMsT0FBT08sS0FBSyxFQUFFO0lBQ2QsTUFBTUMsS0FBSyxDQUFDRCxLQUFLLENBQUNFLE9BQU8sQ0FBQztFQUM1QjtBQUNGLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQVosT0FBTyxDQUFDYSxXQUFXLEdBQUlWLEtBQUssSUFBSztFQUMvQixJQUFJO0lBQ0YsTUFBTUQsT0FBTyxHQUFHSixHQUFHLENBQUNnQixNQUFNLENBQUNYLEtBQUssRUFBRVksU0FBUyxDQUFDLENBQUMsQ0FBQztJQUM5QyxPQUFPYixPQUFPO0VBQ2hCLENBQUMsQ0FBQyxPQUFPUSxLQUFLLEVBQUU7SUFDZCxNQUFNQyxLQUFLLENBQUNELEtBQUssQ0FBQ0UsT0FBTyxDQUFDO0VBQzVCO0FBQ0YsQ0FBQyJ9","map":{"version":3,"names":["jwt","require","exports","generateToken","payload","token","sign","process","env","JWT_SECRET","expiresIn","JWT_EXPIRES_IN","error","Error","message","decodeToken","verify","jwtSecret"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\utils\\","sources":["jwt.js"],"sourcesContent":["const jwt = require(\"jsonwebtoken\");\n\n/**\n *\n * @param {object} payload\n * @returns {string}\n *\n */\n\nexports.generateToken = (payload) => {\n  try {\n    const token = jwt.sign({ ...payload }, process.env.JWT_SECRET, {\n      expiresIn: process.env.JWT_EXPIRES_IN,\n    });\n    return token;\n  } catch (error) {\n    throw Error(error.message);\n  }\n};\n\n/**\n *\n * @param {string} token\n * @returns {object}\n */\n\nexports.decodeToken = (token) => {\n  try {\n    const payload = jwt.verify(token, jwtSecret); //vs decode\n    return payload;\n  } catch (error) {\n    throw Error(error.message);\n  }\n};\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAc,CAAC;;AAEnC;AACA;AACA;AACA;AACA;AACA;;AAEAC,OAAO,CAACC,aAAa,GAAIC,OAAO,IAAK;EACnC,IAAI;IACF,MAAMC,KAAK,GAAGL,GAAG,CAACM,IAAI,CAAC;MAAE,GAAGF;IAAQ,CAAC,EAAEG,OAAO,CAACC,GAAG,CAACC,UAAU,EAAE;MAC7DC,SAAS,EAAEH,OAAO,CAACC,GAAG,CAACG;IACzB,CAAC,CAAC;IACF,OAAON,KAAK;EACd,CAAC,CAAC,OAAOO,KAAK,EAAE;IACd,MAAMC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;EAC5B;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEAZ,OAAO,CAACa,WAAW,GAAIV,KAAK,IAAK;EAC/B,IAAI;IACF,MAAMD,OAAO,GAAGJ,GAAG,CAACgB,MAAM,CAACX,KAAK,EAAEY,SAAS,CAAC,CAAC,CAAC;IAC9C,OAAOb,OAAO;EAChB,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACd,MAAMC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;EAC5B;AACF,CAAC"}},"mtime":1705908231684},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\utils\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\utils\\\\AppError.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"class AppError extends Error {\n  constructor(statusCode, message) {\n    super(message);\n    this.statusCode = statusCode;\n  }\n}\nmodule.exports = AppError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBcHBFcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJzdGF0dXNDb2RlIiwibWVzc2FnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcSGFkYXMtMDNcXERvY3VtZW50c1xcZnVsbHN0YWNrXFxiYWNrXFx1dGlsc1xcIiwic291cmNlcyI6WyJBcHBFcnJvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBBcHBFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3Ioc3RhdHVzQ29kZSwgbWVzc2FnZSkge1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIHRoaXMuc3RhdHVzQ29kZSA9IHN0YXR1c0NvZGU7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gQXBwRXJyb3I7XG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsU0FBU0MsS0FBSyxDQUFDO0VBQzNCQyxXQUFXQSxDQUFDQyxVQUFVLEVBQUVDLE9BQU8sRUFBRTtJQUMvQixLQUFLLENBQUNBLE9BQU8sQ0FBQztJQUNkLElBQUksQ0FBQ0QsVUFBVSxHQUFHQSxVQUFVO0VBQzlCO0FBQ0Y7QUFDQUUsTUFBTSxDQUFDQyxPQUFPLEdBQUdOLFFBQVEifQ==","map":{"version":3,"names":["AppError","Error","constructor","statusCode","message","module","exports"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\utils\\","sources":["AppError.js"],"sourcesContent":["class AppError extends Error {\n  constructor(statusCode, message) {\n    super(message);\n    this.statusCode = statusCode;\n  }\n}\nmodule.exports = AppError;\n"],"mappings":"AAAA,MAAMA,QAAQ,SAASC,KAAK,CAAC;EAC3BC,WAAWA,CAACC,UAAU,EAAEC,OAAO,EAAE;IAC/B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACD,UAAU,GAAGA,UAAU;EAC9B;AACF;AACAE,MAAM,CAACC,OAAO,GAAGN,QAAQ"}},"mtime":1705908231463},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\utils\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\utils\\\\email.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const nodemailer = require(\"nodemailer\");\nconst sendEmail = async options => {\n  ///1 create transporter\n  const transporter = nodemailer.createTransport({\n    host: process.env.EMAIL_HOST,\n    port: process.env.EMAIL_PORT || 2525,\n    /* secure: false, */\n    auth: {\n      user: process.env.EMAIL_USER,\n      pass: process.env.EMAIL_PASSWORD\n    }\n\n    //In gmail use less secure app option\n  });\n  ///2 Define email options\n  const mailOptions = {\n    from: \"SkillSync <SkillSyncGroup@gmail.com>\",\n    to: options.email,\n    subject: options.subject,\n    text: options.text\n    //html\n  };\n  ///3 send the email\n  await transporter.sendMail(mailOptions);\n};\nmodule.exports = sendEmail;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJub2RlbWFpbGVyIiwicmVxdWlyZSIsInNlbmRFbWFpbCIsIm9wdGlvbnMiLCJ0cmFuc3BvcnRlciIsImNyZWF0ZVRyYW5zcG9ydCIsImhvc3QiLCJwcm9jZXNzIiwiZW52IiwiRU1BSUxfSE9TVCIsInBvcnQiLCJFTUFJTF9QT1JUIiwiYXV0aCIsInVzZXIiLCJFTUFJTF9VU0VSIiwicGFzcyIsIkVNQUlMX1BBU1NXT1JEIiwibWFpbE9wdGlvbnMiLCJmcm9tIiwidG8iLCJlbWFpbCIsInN1YmplY3QiLCJ0ZXh0Iiwic2VuZE1haWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhhZGFzLTAzXFxEb2N1bWVudHNcXGZ1bGxzdGFja1xcYmFja1xcdXRpbHNcXCIsInNvdXJjZXMiOlsiZW1haWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgbm9kZW1haWxlciA9IHJlcXVpcmUoXCJub2RlbWFpbGVyXCIpO1xuXG5jb25zdCBzZW5kRW1haWwgPSBhc3luYyAob3B0aW9ucykgPT4ge1xuICAvLy8xIGNyZWF0ZSB0cmFuc3BvcnRlclxuICBjb25zdCB0cmFuc3BvcnRlciA9IG5vZGVtYWlsZXIuY3JlYXRlVHJhbnNwb3J0KHtcbiAgICBob3N0OiBwcm9jZXNzLmVudi5FTUFJTF9IT1NULFxuXG4gICAgcG9ydDogcHJvY2Vzcy5lbnYuRU1BSUxfUE9SVCB8fCAyNTI1LFxuICAgIC8qIHNlY3VyZTogZmFsc2UsICovXG4gICAgYXV0aDoge1xuICAgICAgdXNlcjogcHJvY2Vzcy5lbnYuRU1BSUxfVVNFUixcbiAgICAgIHBhc3M6IHByb2Nlc3MuZW52LkVNQUlMX1BBU1NXT1JELFxuICAgIH0sXG5cbiAgICAvL0luIGdtYWlsIHVzZSBsZXNzIHNlY3VyZSBhcHAgb3B0aW9uXG4gIH0pO1xuICAvLy8yIERlZmluZSBlbWFpbCBvcHRpb25zXG4gIGNvbnN0IG1haWxPcHRpb25zID0ge1xuICAgIGZyb206IFwiU2tpbGxTeW5jIDxTa2lsbFN5bmNHcm91cEBnbWFpbC5jb20+XCIsXG4gICAgdG86IG9wdGlvbnMuZW1haWwsXG4gICAgc3ViamVjdDogb3B0aW9ucy5zdWJqZWN0LFxuICAgIHRleHQ6IG9wdGlvbnMudGV4dCxcbiAgICAvL2h0bWxcbiAgfTtcbiAgLy8vMyBzZW5kIHRoZSBlbWFpbFxuICBhd2FpdCB0cmFuc3BvcnRlci5zZW5kTWFpbChtYWlsT3B0aW9ucyk7XG59O1xubW9kdWxlLmV4cG9ydHMgPSBzZW5kRW1haWw7XG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFVBQVUsR0FBR0MsT0FBTyxDQUFDLFlBQVksQ0FBQztBQUV4QyxNQUFNQyxTQUFTLEdBQUcsTUFBT0MsT0FBTyxJQUFLO0VBQ25DO0VBQ0EsTUFBTUMsV0FBVyxHQUFHSixVQUFVLENBQUNLLGVBQWUsQ0FBQztJQUM3Q0MsSUFBSSxFQUFFQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsVUFBVTtJQUU1QkMsSUFBSSxFQUFFSCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0csVUFBVSxJQUFJLElBQUk7SUFDcEM7SUFDQUMsSUFBSSxFQUFFO01BQ0pDLElBQUksRUFBRU4sT0FBTyxDQUFDQyxHQUFHLENBQUNNLFVBQVU7TUFDNUJDLElBQUksRUFBRVIsT0FBTyxDQUFDQyxHQUFHLENBQUNRO0lBQ3BCOztJQUVBO0VBQ0YsQ0FBQyxDQUFDO0VBQ0Y7RUFDQSxNQUFNQyxXQUFXLEdBQUc7SUFDbEJDLElBQUksRUFBRSxzQ0FBc0M7SUFDNUNDLEVBQUUsRUFBRWhCLE9BQU8sQ0FBQ2lCLEtBQUs7SUFDakJDLE9BQU8sRUFBRWxCLE9BQU8sQ0FBQ2tCLE9BQU87SUFDeEJDLElBQUksRUFBRW5CLE9BQU8sQ0FBQ21CO0lBQ2Q7RUFDRixDQUFDO0VBQ0Q7RUFDQSxNQUFNbEIsV0FBVyxDQUFDbUIsUUFBUSxDQUFDTixXQUFXLENBQUM7QUFDekMsQ0FBQztBQUNETyxNQUFNLENBQUNDLE9BQU8sR0FBR3ZCLFNBQVMifQ==","map":{"version":3,"names":["nodemailer","require","sendEmail","options","transporter","createTransport","host","process","env","EMAIL_HOST","port","EMAIL_PORT","auth","user","EMAIL_USER","pass","EMAIL_PASSWORD","mailOptions","from","to","email","subject","text","sendMail","module","exports"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\utils\\","sources":["email.js"],"sourcesContent":["const nodemailer = require(\"nodemailer\");\n\nconst sendEmail = async (options) => {\n  ///1 create transporter\n  const transporter = nodemailer.createTransport({\n    host: process.env.EMAIL_HOST,\n\n    port: process.env.EMAIL_PORT || 2525,\n    /* secure: false, */\n    auth: {\n      user: process.env.EMAIL_USER,\n      pass: process.env.EMAIL_PASSWORD,\n    },\n\n    //In gmail use less secure app option\n  });\n  ///2 Define email options\n  const mailOptions = {\n    from: \"SkillSync <SkillSyncGroup@gmail.com>\",\n    to: options.email,\n    subject: options.subject,\n    text: options.text,\n    //html\n  };\n  ///3 send the email\n  await transporter.sendMail(mailOptions);\n};\nmodule.exports = sendEmail;\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AAExC,MAAMC,SAAS,GAAG,MAAOC,OAAO,IAAK;EACnC;EACA,MAAMC,WAAW,GAAGJ,UAAU,CAACK,eAAe,CAAC;IAC7CC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU;IAE5BC,IAAI,EAAEH,OAAO,CAACC,GAAG,CAACG,UAAU,IAAI,IAAI;IACpC;IACAC,IAAI,EAAE;MACJC,IAAI,EAAEN,OAAO,CAACC,GAAG,CAACM,UAAU;MAC5BC,IAAI,EAAER,OAAO,CAACC,GAAG,CAACQ;IACpB;;IAEA;EACF,CAAC,CAAC;EACF;EACA,MAAMC,WAAW,GAAG;IAClBC,IAAI,EAAE,sCAAsC;IAC5CC,EAAE,EAAEhB,OAAO,CAACiB,KAAK;IACjBC,OAAO,EAAElB,OAAO,CAACkB,OAAO;IACxBC,IAAI,EAAEnB,OAAO,CAACmB;IACd;EACF,CAAC;EACD;EACA,MAAMlB,WAAW,CAACmB,QAAQ,CAACN,WAAW,CAAC;AACzC,CAAC;AACDO,MAAM,CAACC,OAAO,GAAGvB,SAAS"}},"mtime":1705908231558},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\models\\\\userModel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const mongoose = require(\"mongoose\");\nconst Joi = require(\"joi\");\nconst jwt = require(\"jsonwebtoken\");\nconst {\n  config\n} = require(\"../config/secret\");\nlet userSchema = new mongoose.Schema({\n  name: String,\n  email: String,\n  password: String,\n  date_created: {\n    type: Date,\n    default: Date.now()\n  }\n});\nexports.UserModel = mongoose.model(\"users\", userSchema);\nexports.createToken = _id => {\n  let token = jwt.sign({\n    _id\n  }, config.tokenSecret, {\n    expiresIn: \"60mins\"\n  });\n  return token;\n};\nexports.validUser = _reqBody => {\n  let joiSchema = Joi.object({\n    name: Joi.string().min(2).max(99).required(),\n    email: Joi.string().min(2).max(99).email().required(),\n    password: Joi.string().min(3).max(99).required()\n  });\n  return joiSchema.validate(_reqBody);\n};\nexports.validLogin = _reqBody => {\n  let joiSchema = Joi.object({\n    email: Joi.string().min(2).max(99).email().required(),\n    password: Joi.string().min(3).max(99).required()\n  });\n  return joiSchema.validate(_reqBody);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJKb2kiLCJqd3QiLCJjb25maWciLCJ1c2VyU2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsIlN0cmluZyIsImVtYWlsIiwicGFzc3dvcmQiLCJkYXRlX2NyZWF0ZWQiLCJ0eXBlIiwiRGF0ZSIsImRlZmF1bHQiLCJub3ciLCJleHBvcnRzIiwiVXNlck1vZGVsIiwibW9kZWwiLCJjcmVhdGVUb2tlbiIsIl9pZCIsInRva2VuIiwic2lnbiIsInRva2VuU2VjcmV0IiwiZXhwaXJlc0luIiwidmFsaWRVc2VyIiwiX3JlcUJvZHkiLCJqb2lTY2hlbWEiLCJvYmplY3QiLCJzdHJpbmciLCJtaW4iLCJtYXgiLCJyZXF1aXJlZCIsInZhbGlkYXRlIiwidmFsaWRMb2dpbiJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIYWRhcy0wM1xcRG9jdW1lbnRzXFxmdWxsc3RhY2tcXGJhY2tcXG1vZGVsc1xcIiwic291cmNlcyI6WyJ1c2VyTW9kZWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIik7XHJcbmNvbnN0IEpvaSA9IHJlcXVpcmUoXCJqb2lcIik7XHJcbmNvbnN0IGp3dCA9IHJlcXVpcmUoXCJqc29ud2VidG9rZW5cIik7XHJcbmNvbnN0IHtjb25maWd9ID0gcmVxdWlyZShcIi4uL2NvbmZpZy9zZWNyZXRcIilcclxuXHJcbmxldCB1c2VyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgbmFtZTpTdHJpbmcsXHJcbiAgZW1haWw6U3RyaW5nLFxyXG4gIHBhc3N3b3JkOlN0cmluZyxcclxuICBkYXRlX2NyZWF0ZWQ6e1xyXG4gICAgdHlwZTpEYXRlICwgZGVmYXVsdDpEYXRlLm5vdygpXHJcbiAgfVxyXG59KVxyXG5cclxuZXhwb3J0cy5Vc2VyTW9kZWwgPSBtb25nb29zZS5tb2RlbChcInVzZXJzXCIsdXNlclNjaGVtYSk7XHJcblxyXG5leHBvcnRzLmNyZWF0ZVRva2VuID0gKF9pZCkgPT4ge1xyXG4gIGxldCB0b2tlbiA9IGp3dC5zaWduKHtfaWR9LGNvbmZpZy50b2tlblNlY3JldCx7ZXhwaXJlc0luOlwiNjBtaW5zXCJ9KTtcclxuICByZXR1cm4gdG9rZW47XHJcbn1cclxuXHJcbmV4cG9ydHMudmFsaWRVc2VyID0gKF9yZXFCb2R5KSA9PiB7XHJcbiAgbGV0IGpvaVNjaGVtYSA9IEpvaS5vYmplY3Qoe1xyXG4gICAgbmFtZTpKb2kuc3RyaW5nKCkubWluKDIpLm1heCg5OSkucmVxdWlyZWQoKSxcclxuICAgIGVtYWlsOkpvaS5zdHJpbmcoKS5taW4oMikubWF4KDk5KS5lbWFpbCgpLnJlcXVpcmVkKCksXHJcbiAgICBwYXNzd29yZDpKb2kuc3RyaW5nKCkubWluKDMpLm1heCg5OSkucmVxdWlyZWQoKVxyXG4gIH0pXHJcblxyXG4gIHJldHVybiBqb2lTY2hlbWEudmFsaWRhdGUoX3JlcUJvZHkpO1xyXG59XHJcblxyXG5leHBvcnRzLnZhbGlkTG9naW4gPSAoX3JlcUJvZHkpID0+IHtcclxuICBsZXQgam9pU2NoZW1hID0gSm9pLm9iamVjdCh7XHJcbiAgICBlbWFpbDpKb2kuc3RyaW5nKCkubWluKDIpLm1heCg5OSkuZW1haWwoKS5yZXF1aXJlZCgpLFxyXG4gICAgcGFzc3dvcmQ6Sm9pLnN0cmluZygpLm1pbigzKS5tYXgoOTkpLnJlcXVpcmVkKClcclxuICB9KVxyXG5cclxuICByZXR1cm4gam9pU2NoZW1hLnZhbGlkYXRlKF9yZXFCb2R5KTtcclxufSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBVSxDQUFDO0FBQ3BDLE1BQU1DLEdBQUcsR0FBR0QsT0FBTyxDQUFDLEtBQUssQ0FBQztBQUMxQixNQUFNRSxHQUFHLEdBQUdGLE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFDbkMsTUFBTTtFQUFDRztBQUFNLENBQUMsR0FBR0gsT0FBTyxDQUFDLGtCQUFrQixDQUFDO0FBRTVDLElBQUlJLFVBQVUsR0FBRyxJQUFJTCxRQUFRLENBQUNNLE1BQU0sQ0FBQztFQUNuQ0MsSUFBSSxFQUFDQyxNQUFNO0VBQ1hDLEtBQUssRUFBQ0QsTUFBTTtFQUNaRSxRQUFRLEVBQUNGLE1BQU07RUFDZkcsWUFBWSxFQUFDO0lBQ1hDLElBQUksRUFBQ0MsSUFBSTtJQUFHQyxPQUFPLEVBQUNELElBQUksQ0FBQ0UsR0FBRyxDQUFDO0VBQy9CO0FBQ0YsQ0FBQyxDQUFDO0FBRUZDLE9BQU8sQ0FBQ0MsU0FBUyxHQUFHakIsUUFBUSxDQUFDa0IsS0FBSyxDQUFDLE9BQU8sRUFBQ2IsVUFBVSxDQUFDO0FBRXREVyxPQUFPLENBQUNHLFdBQVcsR0FBSUMsR0FBRyxJQUFLO0VBQzdCLElBQUlDLEtBQUssR0FBR2xCLEdBQUcsQ0FBQ21CLElBQUksQ0FBQztJQUFDRjtFQUFHLENBQUMsRUFBQ2hCLE1BQU0sQ0FBQ21CLFdBQVcsRUFBQztJQUFDQyxTQUFTLEVBQUM7RUFBUSxDQUFDLENBQUM7RUFDbkUsT0FBT0gsS0FBSztBQUNkLENBQUM7QUFFREwsT0FBTyxDQUFDUyxTQUFTLEdBQUlDLFFBQVEsSUFBSztFQUNoQyxJQUFJQyxTQUFTLEdBQUd6QixHQUFHLENBQUMwQixNQUFNLENBQUM7SUFDekJyQixJQUFJLEVBQUNMLEdBQUcsQ0FBQzJCLE1BQU0sQ0FBQyxDQUFDLENBQUNDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDQyxRQUFRLENBQUMsQ0FBQztJQUMzQ3ZCLEtBQUssRUFBQ1AsR0FBRyxDQUFDMkIsTUFBTSxDQUFDLENBQUMsQ0FBQ0MsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUN0QixLQUFLLENBQUMsQ0FBQyxDQUFDdUIsUUFBUSxDQUFDLENBQUM7SUFDcER0QixRQUFRLEVBQUNSLEdBQUcsQ0FBQzJCLE1BQU0sQ0FBQyxDQUFDLENBQUNDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDQyxRQUFRLENBQUM7RUFDaEQsQ0FBQyxDQUFDO0VBRUYsT0FBT0wsU0FBUyxDQUFDTSxRQUFRLENBQUNQLFFBQVEsQ0FBQztBQUNyQyxDQUFDO0FBRURWLE9BQU8sQ0FBQ2tCLFVBQVUsR0FBSVIsUUFBUSxJQUFLO0VBQ2pDLElBQUlDLFNBQVMsR0FBR3pCLEdBQUcsQ0FBQzBCLE1BQU0sQ0FBQztJQUN6Qm5CLEtBQUssRUFBQ1AsR0FBRyxDQUFDMkIsTUFBTSxDQUFDLENBQUMsQ0FBQ0MsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUN0QixLQUFLLENBQUMsQ0FBQyxDQUFDdUIsUUFBUSxDQUFDLENBQUM7SUFDcER0QixRQUFRLEVBQUNSLEdBQUcsQ0FBQzJCLE1BQU0sQ0FBQyxDQUFDLENBQUNDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDQyxRQUFRLENBQUM7RUFDaEQsQ0FBQyxDQUFDO0VBRUYsT0FBT0wsU0FBUyxDQUFDTSxRQUFRLENBQUNQLFFBQVEsQ0FBQztBQUNyQyxDQUFDIn0=","map":{"version":3,"names":["mongoose","require","Joi","jwt","config","userSchema","Schema","name","String","email","password","date_created","type","Date","default","now","exports","UserModel","model","createToken","_id","token","sign","tokenSecret","expiresIn","validUser","_reqBody","joiSchema","object","string","min","max","required","validate","validLogin"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\models\\","sources":["userModel.js"],"sourcesContent":["const mongoose = require(\"mongoose\");\r\nconst Joi = require(\"joi\");\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst {config} = require(\"../config/secret\")\r\n\r\nlet userSchema = new mongoose.Schema({\r\n  name:String,\r\n  email:String,\r\n  password:String,\r\n  date_created:{\r\n    type:Date , default:Date.now()\r\n  }\r\n})\r\n\r\nexports.UserModel = mongoose.model(\"users\",userSchema);\r\n\r\nexports.createToken = (_id) => {\r\n  let token = jwt.sign({_id},config.tokenSecret,{expiresIn:\"60mins\"});\r\n  return token;\r\n}\r\n\r\nexports.validUser = (_reqBody) => {\r\n  let joiSchema = Joi.object({\r\n    name:Joi.string().min(2).max(99).required(),\r\n    email:Joi.string().min(2).max(99).email().required(),\r\n    password:Joi.string().min(3).max(99).required()\r\n  })\r\n\r\n  return joiSchema.validate(_reqBody);\r\n}\r\n\r\nexports.validLogin = (_reqBody) => {\r\n  let joiSchema = Joi.object({\r\n    email:Joi.string().min(2).max(99).email().required(),\r\n    password:Joi.string().min(3).max(99).required()\r\n  })\r\n\r\n  return joiSchema.validate(_reqBody);\r\n}"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMC,GAAG,GAAGD,OAAO,CAAC,KAAK,CAAC;AAC1B,MAAME,GAAG,GAAGF,OAAO,CAAC,cAAc,CAAC;AACnC,MAAM;EAACG;AAAM,CAAC,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAE5C,IAAII,UAAU,GAAG,IAAIL,QAAQ,CAACM,MAAM,CAAC;EACnCC,IAAI,EAACC,MAAM;EACXC,KAAK,EAACD,MAAM;EACZE,QAAQ,EAACF,MAAM;EACfG,YAAY,EAAC;IACXC,IAAI,EAACC,IAAI;IAAGC,OAAO,EAACD,IAAI,CAACE,GAAG,CAAC;EAC/B;AACF,CAAC,CAAC;AAEFC,OAAO,CAACC,SAAS,GAAGjB,QAAQ,CAACkB,KAAK,CAAC,OAAO,EAACb,UAAU,CAAC;AAEtDW,OAAO,CAACG,WAAW,GAAIC,GAAG,IAAK;EAC7B,IAAIC,KAAK,GAAGlB,GAAG,CAACmB,IAAI,CAAC;IAACF;EAAG,CAAC,EAAChB,MAAM,CAACmB,WAAW,EAAC;IAACC,SAAS,EAAC;EAAQ,CAAC,CAAC;EACnE,OAAOH,KAAK;AACd,CAAC;AAEDL,OAAO,CAACS,SAAS,GAAIC,QAAQ,IAAK;EAChC,IAAIC,SAAS,GAAGzB,GAAG,CAAC0B,MAAM,CAAC;IACzBrB,IAAI,EAACL,GAAG,CAAC2B,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC;IAC3CvB,KAAK,EAACP,GAAG,CAAC2B,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,EAAE,CAAC,CAACtB,KAAK,CAAC,CAAC,CAACuB,QAAQ,CAAC,CAAC;IACpDtB,QAAQ,EAACR,GAAG,CAAC2B,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC;EAChD,CAAC,CAAC;EAEF,OAAOL,SAAS,CAACM,QAAQ,CAACP,QAAQ,CAAC;AACrC,CAAC;AAEDV,OAAO,CAACkB,UAAU,GAAIR,QAAQ,IAAK;EACjC,IAAIC,SAAS,GAAGzB,GAAG,CAAC0B,MAAM,CAAC;IACzBnB,KAAK,EAACP,GAAG,CAAC2B,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,EAAE,CAAC,CAACtB,KAAK,CAAC,CAAC,CAACuB,QAAQ,CAAC,CAAC;IACpDtB,QAAQ,EAACR,GAAG,CAAC2B,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC;EAChD,CAAC,CAAC;EAEF,OAAOL,SAAS,CAACM,QAAQ,CAACP,QAAQ,CAAC;AACrC,CAAC"}},"mtime":1705908430836},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\db\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\db\\\\mongoconnect.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const mongoose = require('mongoose');\nconst {\n  config\n} = require(\"../config/secret\");\nmain().catch(err => console.log(err));\nasync function main() {\n  mongoose.set('strictQuery', false);\n  await mongoose.connect(`mongodb+srv://${config.userDb}:${config.passDb}@rest.vzwtxni.mongodb.net/?retryWrites=true&w=majority`);\n  console.log(\"mongo connect\");\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJjb25maWciLCJtYWluIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwic2V0IiwiY29ubmVjdCIsInVzZXJEYiIsInBhc3NEYiJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIYWRhcy0wM1xcRG9jdW1lbnRzXFxmdWxsc3RhY2tcXGJhY2tcXGRiXFwiLCJzb3VyY2VzIjpbIm1vbmdvY29ubmVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5jb25zdCB7Y29uZmlnfSA9cmVxdWlyZShcIi4uL2NvbmZpZy9zZWNyZXRcIilcblxubWFpbigpLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKTtcblxuYXN5bmMgZnVuY3Rpb24gbWFpbigpIHtcbiAgICBtb25nb29zZS5zZXQoJ3N0cmljdFF1ZXJ5JyAsIGZhbHNlKTtcbiAgICBcbiAgYXdhaXQgbW9uZ29vc2UuY29ubmVjdChgbW9uZ29kYitzcnY6Ly8ke2NvbmZpZy51c2VyRGJ9OiR7Y29uZmlnLnBhc3NEYn1AcmVzdC52end0eG5pLm1vbmdvZGIubmV0Lz9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHlgKTtcbiAgY29uc29sZS5sb2coXCJtb25nbyBjb25uZWN0XCIpXG5cbiAgXG59Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFVLENBQUM7QUFDcEMsTUFBTTtFQUFDQztBQUFNLENBQUMsR0FBRUQsT0FBTyxDQUFDLGtCQUFrQixDQUFDO0FBRTNDRSxJQUFJLENBQUMsQ0FBQyxDQUFDQyxLQUFLLENBQUNDLEdBQUcsSUFBSUMsT0FBTyxDQUFDQyxHQUFHLENBQUNGLEdBQUcsQ0FBQyxDQUFDO0FBRXJDLGVBQWVGLElBQUlBLENBQUEsRUFBRztFQUNsQkgsUUFBUSxDQUFDUSxHQUFHLENBQUMsYUFBYSxFQUFHLEtBQUssQ0FBQztFQUVyQyxNQUFNUixRQUFRLENBQUNTLE9BQU8sQ0FBRSxpQkFBZ0JQLE1BQU0sQ0FBQ1EsTUFBTyxJQUFHUixNQUFNLENBQUNTLE1BQU8sd0RBQXVELENBQUM7RUFDL0hMLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGVBQWUsQ0FBQztBQUc5QiJ9","map":{"version":3,"names":["mongoose","require","config","main","catch","err","console","log","set","connect","userDb","passDb"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\db\\","sources":["mongoconnect.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst {config} =require(\"../config/secret\")\n\nmain().catch(err => console.log(err));\n\nasync function main() {\n    mongoose.set('strictQuery' , false);\n    \n  await mongoose.connect(`mongodb+srv://${config.userDb}:${config.passDb}@rest.vzwtxni.mongodb.net/?retryWrites=true&w=majority`);\n  console.log(\"mongo connect\")\n\n  \n}"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAM;EAACC;AAAM,CAAC,GAAED,OAAO,CAAC,kBAAkB,CAAC;AAE3CE,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AAErC,eAAeF,IAAIA,CAAA,EAAG;EAClBH,QAAQ,CAACQ,GAAG,CAAC,aAAa,EAAG,KAAK,CAAC;EAErC,MAAMR,QAAQ,CAACS,OAAO,CAAE,iBAAgBP,MAAM,CAACQ,MAAO,IAAGR,MAAM,CAACS,MAAO,wDAAuD,CAAC;EAC/HL,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;AAG9B"}},"mtime":1705917811266},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\models\\\\RestaurantBookingSystem.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const {\n  ReservationModel\n} = require('./ReservationModel');\nconst {\n  RestaurantModel,\n  validateRestaurant\n} = require('./RestaurantModel');\nconst {\n  TableModel,\n  validateTable\n} = require('./TableModel');\nclass RestaurantBookingSystem {\n  constructor() {\n    // Initialize an empty object to store tables and their reservations\n    this.tables = {};\n  }\n\n  // async addRestaurant(name, address, phone, hoursOfOperation) {\n  //     try {\n  //         const restaurantData = {\n  //             name,\n  //             address,\n  //             phone,\n  //             hoursOfOperation,\n  //         };\n\n  //         const { error } = validateRestaurant(restaurantData);\n  //         if (error) {\n  //             console.log('Validation error:', error.details[0].message);\n  //             return;\n  //         }\n\n  //         const newRestaurant = new RestaurantModel(restaurantData);\n  //         await newRestaurant.save();\n  //         console.log(`Restaurant ${name} added successfully.`);\n  //     } catch (error) {\n  //         console.error('Error adding restaurant:', error.message);\n  //     }\n  // }\n\n  async addTable(capacity, restaurantId) {\n    try {\n      const restaurant = await RestaurantModel.findByIdAndUpdate(restaurantId, {\n        $inc: {\n          tables: 1,\n          capacity: capacity\n        }\n      }, {\n        new: true\n      });\n      if (!restaurant) {\n        console.log(`Restaurant with ID ${restaurantId} does not exist.`);\n        return;\n      }\n      const existingTablesCount = await TableModel.countDocuments({\n        restaurantId\n      });\n      const newTable = new TableModel({\n        tableNumber: existingTablesCount + 1,\n        capacity,\n        restaurantId\n      });\n      await newTable.save();\n      console.log(`Table ${newTable.tableNumber} with capacity ${capacity} added successfully.`);\n    } catch (error) {\n      console.error('Error adding table:', error.message);\n    }\n  }\n  async makeReservation(restaurantId, tableId, customerName, reservationTime) {\n    try {\n      const restaurant = await RestaurantModel.findById(restaurantId);\n      const table = await TableModel.findById(tableId);\n      if (restaurant && table) {\n        // Check if the reservationTime is a valid date\n        const desiredDateTime = new Date(reservationTime);\n        if (isNaN(desiredDateTime)) {\n          console.log('Invalid date or time format.');\n          return;\n        }\n\n        // Check if the table is available at the specified time\n        const overlappingReservations = table.resDates.filter(resDate => desiredDateTime >= new Date(resDate) && desiredDateTime <= new Date(resDate.getTime() + 2 * 60 * 60 * 1000));\n        if (overlappingReservations.length === 0) {\n          // Table is available, make reservation\n          console.log(reservationTime);\n          table.resDates.push(reservationTime);\n          await table.save();\n          // Save the reservation in the ReservationModel\n          const newReservation = new ReservationModel({\n            restaurantId,\n            tableId,\n            customerName,\n            reservationTime\n          });\n          await newReservation.save();\n          console.log(reservationTime);\n          console.log(`Reservation for Table ${table.tableNumber} at ${reservationTime} for ${customerName} successful.`);\n        } else {\n          console.log(`Table ${table.tableNumber} is already reserved at ${reservationTime}.`);\n        }\n      } else {\n        console.log(`Restaurant or Table does not exist.`);\n      }\n    } catch (error) {\n      console.error('Error making reservation:', error.message);\n    }\n  }\n  async getAvailableTables(restaurantId, date, time) {\n    try {\n      // Validate date and time\n      const reservationDateTime = new Date(`${date} ${time}`);\n      if (isNaN(reservationDateTime)) {\n        throw new Error('Invalid date or time format.');\n      }\n\n      // Find tables where the specified date and time are not in the resDates array\n      const availableTables = await TableModel.find({\n        restaurantId,\n        $or: [{\n          resDates: {\n            $size: 0\n          }\n        },\n        // Tables with no reservations\n        {\n          resDates: {\n            $nin: [reservationDateTime]\n          }\n        } // Tables without the specified date\n        ]\n      });\n\n      // Filter tables based on overlapping reservations\n      const filteredTables = availableTables.filter(table => {\n        const overlappingReservations = table.resDates.filter(reservationDateTime => reservationDateTime >= new Date(reservationDateTime) && reservationDateTime <= new Date(reservationDateTime.getTime() + 2 * 60 * 60 * 1000));\n        return overlappingReservations.length === 0;\n      });\n      return filteredTables.map(table => ({\n        tableNumber: table.tableNumber,\n        capacity: table.capacity\n      }));\n    } catch (error) {\n      console.error('Error getting available tables:', error.message);\n      throw error;\n    }\n  }\n}\nmodule.exports = {\n  RestaurantBookingSystem\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["ReservationModel","require","RestaurantModel","validateRestaurant","TableModel","validateTable","RestaurantBookingSystem","constructor","tables","addTable","capacity","restaurantId","restaurant","findByIdAndUpdate","$inc","new","console","log","existingTablesCount","countDocuments","newTable","tableNumber","save","error","message","makeReservation","tableId","customerName","reservationTime","findById","table","desiredDateTime","Date","isNaN","overlappingReservations","resDates","filter","resDate","getTime","length","push","newReservation","getAvailableTables","date","time","reservationDateTime","Error","availableTables","find","$or","$size","$nin","filteredTables","map","module","exports"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\models\\","sources":["RestaurantBookingSystem.js"],"sourcesContent":["const { ReservationModel } = require('./ReservationModel');\r\nconst { RestaurantModel, validateRestaurant } = require('./RestaurantModel');\r\nconst { TableModel, validateTable } = require('./TableModel');\r\n\r\nclass RestaurantBookingSystem {\r\n    constructor() {\r\n        // Initialize an empty object to store tables and their reservations\r\n        this.tables = {};\r\n    }\r\n    \r\n    // async addRestaurant(name, address, phone, hoursOfOperation) {\r\n    //     try {\r\n    //         const restaurantData = {\r\n    //             name,\r\n    //             address,\r\n    //             phone,\r\n    //             hoursOfOperation,\r\n    //         };\r\n    \r\n    //         const { error } = validateRestaurant(restaurantData);\r\n    //         if (error) {\r\n    //             console.log('Validation error:', error.details[0].message);\r\n    //             return;\r\n    //         }\r\n    \r\n    //         const newRestaurant = new RestaurantModel(restaurantData);\r\n    //         await newRestaurant.save();\r\n    //         console.log(`Restaurant ${name} added successfully.`);\r\n    //     } catch (error) {\r\n    //         console.error('Error adding restaurant:', error.message);\r\n    //     }\r\n    // }\r\n\r\n    async addTable(capacity, restaurantId) {\r\n        try {\r\n            const restaurant = await RestaurantModel.findByIdAndUpdate(\r\n                restaurantId,\r\n                {\r\n                    $inc: { tables: 1, capacity: capacity },\r\n                },\r\n                { new: true }\r\n            );\r\n    \r\n            if (!restaurant) {\r\n                console.log(`Restaurant with ID ${restaurantId} does not exist.`);\r\n                return;\r\n            }\r\n    \r\n            const existingTablesCount = await TableModel.countDocuments({ restaurantId });\r\n            const newTable = new TableModel({\r\n                tableNumber: existingTablesCount + 1,\r\n                capacity,\r\n                restaurantId,\r\n            });\r\n            await newTable.save();\r\n    \r\n            console.log(`Table ${newTable.tableNumber} with capacity ${capacity} added successfully.`);\r\n        } catch (error) {\r\n            console.error('Error adding table:', error.message);\r\n        }\r\n    }\r\n    \r\n\r\n\r\n    async makeReservation(restaurantId, tableId, customerName, reservationTime) {\r\n        try {\r\n            const restaurant = await RestaurantModel.findById(restaurantId);\r\n            const table = await TableModel.findById(tableId);\r\n    \r\n            if (restaurant && table) {\r\n                // Check if the reservationTime is a valid date\r\n                const desiredDateTime = new Date(reservationTime);\r\n                if (isNaN(desiredDateTime)) {\r\n                    console.log('Invalid date or time format.');\r\n                    return;\r\n                }\r\n    \r\n                // Check if the table is available at the specified time\r\n                const overlappingReservations = table.resDates.filter(resDate =>\r\n                    desiredDateTime >= new Date(resDate) &&\r\n                    desiredDateTime <= new Date(resDate.getTime() + 2 * 60 * 60 * 1000)\r\n                );\r\n    \r\n                if (overlappingReservations.length === 0) {\r\n                    // Table is available, make reservation\r\n                    console.log(reservationTime);\r\n                    table.resDates.push(reservationTime);\r\n                    await table.save();\r\n                    // Save the reservation in the ReservationModel\r\n                    const newReservation = new ReservationModel({\r\n                        restaurantId,\r\n                        tableId,\r\n                        customerName,\r\n                        reservationTime,\r\n                    });\r\n                    await newReservation.save();\r\n                    console.log(reservationTime);\r\n                    console.log(`Reservation for Table ${table.tableNumber} at ${reservationTime} for ${customerName} successful.`);\r\n                } else {\r\n                    console.log(`Table ${table.tableNumber} is already reserved at ${reservationTime}.`);\r\n                }\r\n            } else {\r\n                console.log(`Restaurant or Table does not exist.`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error making reservation:', error.message);\r\n        }\r\n    }\r\n    \r\n    async getAvailableTables(restaurantId, date, time) {\r\n        try {\r\n            // Validate date and time\r\n            const reservationDateTime = new Date(`${date} ${time}`);\r\n            if (isNaN(reservationDateTime)) {\r\n                throw new Error('Invalid date or time format.');\r\n            }\r\n\r\n            // Find tables where the specified date and time are not in the resDates array\r\n            const availableTables = await TableModel.find({\r\n                restaurantId,\r\n                $or: [\r\n                    { resDates: { $size: 0 } }, // Tables with no reservations\r\n                    { resDates: { $nin: [reservationDateTime] } } // Tables without the specified date\r\n                ]\r\n            });\r\n\r\n            // Filter tables based on overlapping reservations\r\n            const filteredTables = availableTables.filter(table => {\r\n                const overlappingReservations = table.resDates.filter(reservationDateTime =>\r\n                    reservationDateTime >= new Date(reservationDateTime) &&\r\n                    reservationDateTime <= new Date(reservationDateTime.getTime() + 2 * 60 * 60 * 1000)\r\n                );\r\n\r\n                return overlappingReservations.length === 0;\r\n            });\r\n\r\n            return filteredTables.map(table => ({\r\n                tableNumber: table.tableNumber,\r\n                capacity: table.capacity\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error getting available tables:', error.message);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = { RestaurantBookingSystem };"],"mappings":"AAAA,MAAM;EAAEA;AAAiB,CAAC,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC1D,MAAM;EAAEC,eAAe;EAAEC;AAAmB,CAAC,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAC5E,MAAM;EAAEG,UAAU;EAAEC;AAAc,CAAC,GAAGJ,OAAO,CAAC,cAAc,CAAC;AAE7D,MAAMK,uBAAuB,CAAC;EAC1BC,WAAWA,CAAA,EAAG;IACV;IACA,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;EACpB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,QAAQA,CAACC,QAAQ,EAAEC,YAAY,EAAE;IACnC,IAAI;MACA,MAAMC,UAAU,GAAG,MAAMV,eAAe,CAACW,iBAAiB,CACtDF,YAAY,EACZ;QACIG,IAAI,EAAE;UAAEN,MAAM,EAAE,CAAC;UAAEE,QAAQ,EAAEA;QAAS;MAC1C,CAAC,EACD;QAAEK,GAAG,EAAE;MAAK,CAChB,CAAC;MAED,IAAI,CAACH,UAAU,EAAE;QACbI,OAAO,CAACC,GAAG,CAAE,sBAAqBN,YAAa,kBAAiB,CAAC;QACjE;MACJ;MAEA,MAAMO,mBAAmB,GAAG,MAAMd,UAAU,CAACe,cAAc,CAAC;QAAER;MAAa,CAAC,CAAC;MAC7E,MAAMS,QAAQ,GAAG,IAAIhB,UAAU,CAAC;QAC5BiB,WAAW,EAAEH,mBAAmB,GAAG,CAAC;QACpCR,QAAQ;QACRC;MACJ,CAAC,CAAC;MACF,MAAMS,QAAQ,CAACE,IAAI,CAAC,CAAC;MAErBN,OAAO,CAACC,GAAG,CAAE,SAAQG,QAAQ,CAACC,WAAY,kBAAiBX,QAAS,sBAAqB,CAAC;IAC9F,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZP,OAAO,CAACO,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACC,OAAO,CAAC;IACvD;EACJ;EAIA,MAAMC,eAAeA,CAACd,YAAY,EAAEe,OAAO,EAAEC,YAAY,EAAEC,eAAe,EAAE;IACxE,IAAI;MACA,MAAMhB,UAAU,GAAG,MAAMV,eAAe,CAAC2B,QAAQ,CAAClB,YAAY,CAAC;MAC/D,MAAMmB,KAAK,GAAG,MAAM1B,UAAU,CAACyB,QAAQ,CAACH,OAAO,CAAC;MAEhD,IAAId,UAAU,IAAIkB,KAAK,EAAE;QACrB;QACA,MAAMC,eAAe,GAAG,IAAIC,IAAI,CAACJ,eAAe,CAAC;QACjD,IAAIK,KAAK,CAACF,eAAe,CAAC,EAAE;UACxBf,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;UAC3C;QACJ;;QAEA;QACA,MAAMiB,uBAAuB,GAAGJ,KAAK,CAACK,QAAQ,CAACC,MAAM,CAACC,OAAO,IACzDN,eAAe,IAAI,IAAIC,IAAI,CAACK,OAAO,CAAC,IACpCN,eAAe,IAAI,IAAIC,IAAI,CAACK,OAAO,CAACC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CACtE,CAAC;QAED,IAAIJ,uBAAuB,CAACK,MAAM,KAAK,CAAC,EAAE;UACtC;UACAvB,OAAO,CAACC,GAAG,CAACW,eAAe,CAAC;UAC5BE,KAAK,CAACK,QAAQ,CAACK,IAAI,CAACZ,eAAe,CAAC;UACpC,MAAME,KAAK,CAACR,IAAI,CAAC,CAAC;UAClB;UACA,MAAMmB,cAAc,GAAG,IAAIzC,gBAAgB,CAAC;YACxCW,YAAY;YACZe,OAAO;YACPC,YAAY;YACZC;UACJ,CAAC,CAAC;UACF,MAAMa,cAAc,CAACnB,IAAI,CAAC,CAAC;UAC3BN,OAAO,CAACC,GAAG,CAACW,eAAe,CAAC;UAC5BZ,OAAO,CAACC,GAAG,CAAE,yBAAwBa,KAAK,CAACT,WAAY,OAAMO,eAAgB,QAAOD,YAAa,cAAa,CAAC;QACnH,CAAC,MAAM;UACHX,OAAO,CAACC,GAAG,CAAE,SAAQa,KAAK,CAACT,WAAY,2BAA0BO,eAAgB,GAAE,CAAC;QACxF;MACJ,CAAC,MAAM;QACHZ,OAAO,CAACC,GAAG,CAAE,qCAAoC,CAAC;MACtD;IACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZP,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACC,OAAO,CAAC;IAC7D;EACJ;EAEA,MAAMkB,kBAAkBA,CAAC/B,YAAY,EAAEgC,IAAI,EAAEC,IAAI,EAAE;IAC/C,IAAI;MACA;MACA,MAAMC,mBAAmB,GAAG,IAAIb,IAAI,CAAE,GAAEW,IAAK,IAAGC,IAAK,EAAC,CAAC;MACvD,IAAIX,KAAK,CAACY,mBAAmB,CAAC,EAAE;QAC5B,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACnD;;MAEA;MACA,MAAMC,eAAe,GAAG,MAAM3C,UAAU,CAAC4C,IAAI,CAAC;QAC1CrC,YAAY;QACZsC,GAAG,EAAE,CACD;UAAEd,QAAQ,EAAE;YAAEe,KAAK,EAAE;UAAE;QAAE,CAAC;QAAE;QAC5B;UAAEf,QAAQ,EAAE;YAAEgB,IAAI,EAAE,CAACN,mBAAmB;UAAE;QAAE,CAAC,CAAC;QAAA;MAEtD,CAAC,CAAC;;MAEF;MACA,MAAMO,cAAc,GAAGL,eAAe,CAACX,MAAM,CAACN,KAAK,IAAI;QACnD,MAAMI,uBAAuB,GAAGJ,KAAK,CAACK,QAAQ,CAACC,MAAM,CAACS,mBAAmB,IACrEA,mBAAmB,IAAI,IAAIb,IAAI,CAACa,mBAAmB,CAAC,IACpDA,mBAAmB,IAAI,IAAIb,IAAI,CAACa,mBAAmB,CAACP,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CACtF,CAAC;QAED,OAAOJ,uBAAuB,CAACK,MAAM,KAAK,CAAC;MAC/C,CAAC,CAAC;MAEF,OAAOa,cAAc,CAACC,GAAG,CAACvB,KAAK,KAAK;QAChCT,WAAW,EAAES,KAAK,CAACT,WAAW;QAC9BX,QAAQ,EAAEoB,KAAK,CAACpB;MACpB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZP,OAAO,CAACO,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC/D,MAAMD,KAAK;IACf;EACJ;AACJ;AAEA+B,MAAM,CAACC,OAAO,GAAG;EAAEjD;AAAwB,CAAC"}},"mtime":1706008975678},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\models\\\\RestaurantModel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const mongoose = require('mongoose');\nconst Joi = require('joi');\nconst bcrypt = require('bcrypt');\nconst jwt = require('jsonwebtoken');\nconst {\n  config\n} = require('../config/secret');\nconst restaurantSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true,\n    minlength: 2,\n    maxlength: 99\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    minlength: 5,\n    maxlength: 255\n  },\n  address: {\n    type: String,\n    required: true,\n    minlength: 5,\n    maxlength: 255\n  },\n  phone: {\n    type: String,\n    minlength: 5,\n    maxlength: 20\n  },\n  psw: {\n    type: String,\n    minlength: 5,\n    maxlength: 20,\n    select: false\n  },\n  img_url: {\n    type: String,\n    minlength: 2,\n    maxlength: 99,\n    default: null\n  },\n  capacity: {\n    type: Number,\n    required: false\n  },\n  limitedSeats: {\n    type: Number,\n    required: true\n  },\n  tables: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Table'\n  }],\n  reservations: [{\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Reservation'\n  }],\n  hoursOfOperation: {\n    openingHour: {\n      type: Date,\n      required: true\n    },\n    closingHour: {\n      type: Date,\n      required: true\n    }\n  }\n});\n\n// Pre-save hook to hash the password\nrestaurantSchema.pre('save', async function (next) {\n  if (!this.isModified('psw')) return next();\n  this.psw = await bcrypt.hash(this.psw, 12);\n  next();\n});\n\n//check the password\nrestaurantSchema.methods.checkPassword = async function (password) {\n  return await bcrypt.compare(password, this.psw);\n};\n\n//generate a JWT token\nrestaurantSchema.methods.generateAuthToken = function () {\n  const token = jwt.sign({\n    _id: this._id\n  }, config.tokenSecret);\n  return token;\n};\n\n// Pre-remove hook to delete associated tables\nrestaurantSchema.pre('remove', async function (next) {\n  try {\n    // Use the TableModel to delete tables associated with this restaurant\n    await TableModel.deleteMany({\n      _id: {\n        $in: this.tables\n      }\n    });\n    next();\n  } catch (error) {\n    next(error);\n  }\n});\n\n// Custom method to set opening and closing hours from a string\nrestaurantSchema.methods.setOpeningHoursFromString = function (hoursString) {\n  const [opening, closing] = hoursString.split(' - ');\n\n  // Extract hours and set them in the schema\n  this.hoursOfOperation.openingHour = parseInt(opening.split(':')[0], 10);\n  this.hoursOfOperation.closingHour = parseInt(closing.split(':')[0], 10);\n};\nconst RestaurantModel = mongoose.model('Restaurant', restaurantSchema);\nfunction validateRestaurant(restaurant) {\n  const schema = Joi.object({\n    name: Joi.string().min(2).max(99).required(),\n    email: Joi.string().email({\n      tlds: {\n        allow: ['com', 'net', 'org']\n      }\n    }).error(() => Error('Email is not valid')).required(),\n    address: Joi.string().min(5).max(255).required(),\n    phone: Joi.string().min(5).max(20),\n    psw: Joi.string().regex(/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{8,}$/).required().messages({\n      'string.pattern.base': 'Password must contain at least one uppercase letter, one lowercase letter, and one number.'\n    }),\n    limitedSeats: Joi.number().min(0).required(),\n    hoursOfOperation: Joi.object({\n      openingHour: Joi.date().min(0).max(23).required(),\n      closingHour: Joi.date().min(0).max(23).required()\n    }).required()\n  });\n  return schema.validate(restaurant);\n}\nmodule.exports = {\n  RestaurantModel,\n  validateRestaurant\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["mongoose","require","Joi","bcrypt","jwt","config","restaurantSchema","Schema","name","type","String","required","minlength","maxlength","email","unique","address","phone","psw","select","img_url","default","capacity","Number","limitedSeats","tables","Types","ObjectId","ref","reservations","hoursOfOperation","openingHour","Date","closingHour","pre","next","isModified","hash","methods","checkPassword","password","compare","generateAuthToken","token","sign","_id","tokenSecret","TableModel","deleteMany","$in","error","setOpeningHoursFromString","hoursString","opening","closing","split","parseInt","RestaurantModel","model","validateRestaurant","restaurant","schema","object","string","min","max","tlds","allow","Error","regex","messages","number","date","validate","module","exports"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\models\\","sources":["RestaurantModel.js"],"sourcesContent":["const mongoose = require('mongoose');\r\nconst Joi = require('joi');\r\nconst bcrypt = require('bcrypt');\r\nconst jwt = require('jsonwebtoken');\r\nconst { config } = require('../config/secret');\r\n\r\nconst restaurantSchema = new mongoose.Schema({\r\n    name: {\r\n        type: String,\r\n        required: true,\r\n        minlength: 2,\r\n        maxlength: 99,\r\n    },\r\n    email: {\r\n        type: String,\r\n        required: true,\r\n        unique: true, \r\n        minlength: 5,\r\n        maxlength: 255,\r\n    },\r\n    address: {\r\n        type: String,\r\n        required: true,\r\n        minlength: 5,\r\n        maxlength: 255,\r\n    },\r\n    phone: {\r\n        type: String,\r\n        minlength: 5,\r\n        maxlength: 20,\r\n    },\r\n    psw: {\r\n        type: String,\r\n        minlength: 5,\r\n        maxlength: 20,\r\n        select: false,\r\n    },\r\n    img_url: {\r\n        type: String,\r\n        minlength: 2,\r\n        maxlength: 99,\r\n        default: null,\r\n    },\r\n    capacity:{\r\n        type: Number,\r\n        required: false,\r\n    },\r\n    limitedSeats:{\r\n        type: Number,\r\n        required: true,\r\n    },\r\n    tables: [{\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'Table'\r\n    }],\r\n    reservations: [{\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'Reservation'\r\n    }],\r\n    hoursOfOperation: {\r\n        openingHour: {\r\n            type: Date,\r\n            required: true,\r\n        },\r\n        closingHour: {\r\n            type: Date,\r\n            required: true,\r\n        },\r\n    },\r\n});\r\n\r\n// Pre-save hook to hash the password\r\nrestaurantSchema.pre('save', async function (next) {\r\n    if (!this.isModified('psw')) return next();\r\n    this.psw = await bcrypt.hash(this.psw, 12);\r\n    next();\r\n});\r\n\r\n//check the password\r\nrestaurantSchema.methods.checkPassword = async function (password) {\r\n    return await bcrypt.compare(password, this.psw);\r\n};\r\n\r\n//generate a JWT token\r\nrestaurantSchema.methods.generateAuthToken = function () {\r\n    const token = jwt.sign({ _id: this._id }, config.tokenSecret);\r\n    return token;\r\n};\r\n\r\n// Pre-remove hook to delete associated tables\r\nrestaurantSchema.pre('remove', async function (next) {\r\n    try {\r\n        // Use the TableModel to delete tables associated with this restaurant\r\n        await TableModel.deleteMany({ _id: { $in: this.tables } });\r\n        next();\r\n    } catch (error) {\r\n        next(error);\r\n    }\r\n});\r\n\r\n// Custom method to set opening and closing hours from a string\r\nrestaurantSchema.methods.setOpeningHoursFromString = function (hoursString) {\r\n    const [opening, closing] = hoursString.split(' - ');\r\n\r\n    // Extract hours and set them in the schema\r\n    this.hoursOfOperation.openingHour = parseInt(opening.split(':')[0], 10);\r\n    this.hoursOfOperation.closingHour = parseInt(closing.split(':')[0], 10);\r\n};\r\n\r\nconst RestaurantModel = mongoose.model('Restaurant', restaurantSchema);\r\n\r\nfunction validateRestaurant(restaurant) {\r\n    const schema = Joi.object({\r\n        name: Joi.string().min(2).max(99).required(),\r\n        email: Joi.string().email({ tlds: { allow: ['com', 'net', 'org'] } }).error(() => Error('Email is not valid')).required(),\r\n        address: Joi.string().min(5).max(255).required(),\r\n        phone: Joi.string().min(5).max(20),\r\n        psw: Joi.string()\r\n            .regex(/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{8,}$/)\r\n            .required()\r\n            .messages({\r\n                'string.pattern.base': 'Password must contain at least one uppercase letter, one lowercase letter, and one number.'\r\n            }),\r\n        limitedSeats: Joi.number().min(0).required(),\r\n        hoursOfOperation: Joi.object({\r\n            openingHour: Joi.date().min(0).max(23).required(),\r\n            closingHour: Joi.date().min(0).max(23).required(),\r\n        }).required(),\r\n    });\r\n\r\n    return schema.validate(restaurant);\r\n}\r\n\r\nmodule.exports = {\r\n    RestaurantModel,\r\n    validateRestaurant,\r\n};\r\n"],"mappings":"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"}},"mtime":1706683483267},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\models\\\\TableModel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const mongoose = require('mongoose');\nconst Joi = require('joi');\nconst tableSchema = new mongoose.Schema({\n  restaurantId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Restaurant',\n    required: true\n  },\n  tableNumber: {\n    type: Number,\n    required: true\n  },\n  capacity: {\n    type: Number,\n    required: true\n  },\n  resDates: [{\n    type: Object,\n    required: true\n  }]\n});\ntableSchema.index({\n  restaurantId: 1,\n  tableNumber: 1\n}, {\n  unique: true\n});\nconst TableModel = mongoose.model('Table', tableSchema);\n\n// Validation function can be updated accordingly\nfunction validateTable(table) {\n  const schema = Joi.object({\n    restaurantId: Joi.string().required(),\n    capacity: Joi.number().required(),\n    resDates: Joi.array().items(Joi.date()).required()\n  });\n  return schema.validate(table);\n}\nmodule.exports = {\n  TableModel,\n  validateTable\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJKb2kiLCJ0YWJsZVNjaGVtYSIsIlNjaGVtYSIsInJlc3RhdXJhbnRJZCIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwicmVxdWlyZWQiLCJ0YWJsZU51bWJlciIsIk51bWJlciIsImNhcGFjaXR5IiwicmVzRGF0ZXMiLCJPYmplY3QiLCJpbmRleCIsInVuaXF1ZSIsIlRhYmxlTW9kZWwiLCJtb2RlbCIsInZhbGlkYXRlVGFibGUiLCJ0YWJsZSIsInNjaGVtYSIsIm9iamVjdCIsInN0cmluZyIsIm51bWJlciIsImFycmF5IiwiaXRlbXMiLCJkYXRlIiwidmFsaWRhdGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhhZGFzLTAzXFxEb2N1bWVudHNcXGZ1bGxzdGFja1xcYmFja1xcbW9kZWxzXFwiLCJzb3VyY2VzIjpbIlRhYmxlTW9kZWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCBKb2kgPSByZXF1aXJlKCdqb2knKTtcclxuXHJcbmNvbnN0IHRhYmxlU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICByZXN0YXVyYW50SWQ6IHtcclxuICAgICAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsXHJcbiAgICAgICAgcmVmOiAnUmVzdGF1cmFudCcsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICB9LFxyXG4gICAgdGFibGVOdW1iZXI6IHtcclxuICAgICAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICB9LFxyXG4gICAgY2FwYWNpdHk6IHtcclxuICAgICAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICB9LFxyXG4gICAgcmVzRGF0ZXM6IFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHR5cGU6IE9iamVjdCxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgfVxyXG4gICAgXVxyXG59KTtcclxuXHJcbnRhYmxlU2NoZW1hLmluZGV4KHsgcmVzdGF1cmFudElkOiAxLCB0YWJsZU51bWJlcjogMSB9LCB7IHVuaXF1ZTogdHJ1ZSB9KTtcclxuXHJcbmNvbnN0IFRhYmxlTW9kZWwgPSBtb25nb29zZS5tb2RlbCgnVGFibGUnLCB0YWJsZVNjaGVtYSk7XHJcblxyXG4vLyBWYWxpZGF0aW9uIGZ1bmN0aW9uIGNhbiBiZSB1cGRhdGVkIGFjY29yZGluZ2x5XHJcbmZ1bmN0aW9uIHZhbGlkYXRlVGFibGUodGFibGUpIHtcclxuICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xyXG4gICAgICAgIHJlc3RhdXJhbnRJZDogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXHJcbiAgICAgICAgY2FwYWNpdHk6IEpvaS5udW1iZXIoKS5yZXF1aXJlZCgpLFxyXG4gICAgICAgIHJlc0RhdGVzOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuZGF0ZSgpKS5yZXF1aXJlZCgpLFxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHNjaGVtYS52YWxpZGF0ZSh0YWJsZSk7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgVGFibGVNb2RlbCxcclxuICAgIHZhbGlkYXRlVGFibGUsXHJcbn07XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsVUFBVSxDQUFDO0FBQ3BDLE1BQU1DLEdBQUcsR0FBR0QsT0FBTyxDQUFDLEtBQUssQ0FBQztBQUUxQixNQUFNRSxXQUFXLEdBQUcsSUFBSUgsUUFBUSxDQUFDSSxNQUFNLENBQUM7RUFDcENDLFlBQVksRUFBRTtJQUNWQyxJQUFJLEVBQUVOLFFBQVEsQ0FBQ0ksTUFBTSxDQUFDRyxLQUFLLENBQUNDLFFBQVE7SUFDcENDLEdBQUcsRUFBRSxZQUFZO0lBQ2pCQyxRQUFRLEVBQUU7RUFDZCxDQUFDO0VBQ0RDLFdBQVcsRUFBRTtJQUNUTCxJQUFJLEVBQUVNLE1BQU07SUFDWkYsUUFBUSxFQUFFO0VBQ2QsQ0FBQztFQUNERyxRQUFRLEVBQUU7SUFDTlAsSUFBSSxFQUFFTSxNQUFNO0lBQ1pGLFFBQVEsRUFBRTtFQUNkLENBQUM7RUFDREksUUFBUSxFQUFFLENBQ047SUFDSVIsSUFBSSxFQUFFUyxNQUFNO0lBQ1pMLFFBQVEsRUFBRTtFQUNkLENBQUM7QUFFVCxDQUFDLENBQUM7QUFFRlAsV0FBVyxDQUFDYSxLQUFLLENBQUM7RUFBRVgsWUFBWSxFQUFFLENBQUM7RUFBRU0sV0FBVyxFQUFFO0FBQUUsQ0FBQyxFQUFFO0VBQUVNLE1BQU0sRUFBRTtBQUFLLENBQUMsQ0FBQztBQUV4RSxNQUFNQyxVQUFVLEdBQUdsQixRQUFRLENBQUNtQixLQUFLLENBQUMsT0FBTyxFQUFFaEIsV0FBVyxDQUFDOztBQUV2RDtBQUNBLFNBQVNpQixhQUFhQSxDQUFDQyxLQUFLLEVBQUU7RUFDMUIsTUFBTUMsTUFBTSxHQUFHcEIsR0FBRyxDQUFDcUIsTUFBTSxDQUFDO0lBQ3RCbEIsWUFBWSxFQUFFSCxHQUFHLENBQUNzQixNQUFNLENBQUMsQ0FBQyxDQUFDZCxRQUFRLENBQUMsQ0FBQztJQUNyQ0csUUFBUSxFQUFFWCxHQUFHLENBQUN1QixNQUFNLENBQUMsQ0FBQyxDQUFDZixRQUFRLENBQUMsQ0FBQztJQUNqQ0ksUUFBUSxFQUFFWixHQUFHLENBQUN3QixLQUFLLENBQUMsQ0FBQyxDQUFDQyxLQUFLLENBQUN6QixHQUFHLENBQUMwQixJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUNsQixRQUFRLENBQUM7RUFDckQsQ0FBQyxDQUFDO0VBRUYsT0FBT1ksTUFBTSxDQUFDTyxRQUFRLENBQUNSLEtBQUssQ0FBQztBQUNqQztBQUVBUyxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUNiYixVQUFVO0VBQ1ZFO0FBQ0osQ0FBQyJ9","map":{"version":3,"names":["mongoose","require","Joi","tableSchema","Schema","restaurantId","type","Types","ObjectId","ref","required","tableNumber","Number","capacity","resDates","Object","index","unique","TableModel","model","validateTable","table","schema","object","string","number","array","items","date","validate","module","exports"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\models\\","sources":["TableModel.js"],"sourcesContent":["const mongoose = require('mongoose');\r\nconst Joi = require('joi');\r\n\r\nconst tableSchema = new mongoose.Schema({\r\n    restaurantId: {\r\n        type: mongoose.Schema.Types.ObjectId,\r\n        ref: 'Restaurant',\r\n        required: true,\r\n    },\r\n    tableNumber: {\r\n        type: Number,\r\n        required: true,\r\n    },\r\n    capacity: {\r\n        type: Number,\r\n        required: true,\r\n    },\r\n    resDates: [\r\n        {\r\n            type: Object,\r\n            required: true,\r\n        }\r\n    ]\r\n});\r\n\r\ntableSchema.index({ restaurantId: 1, tableNumber: 1 }, { unique: true });\r\n\r\nconst TableModel = mongoose.model('Table', tableSchema);\r\n\r\n// Validation function can be updated accordingly\r\nfunction validateTable(table) {\r\n    const schema = Joi.object({\r\n        restaurantId: Joi.string().required(),\r\n        capacity: Joi.number().required(),\r\n        resDates: Joi.array().items(Joi.date()).required(),\r\n    });\r\n\r\n    return schema.validate(table);\r\n}\r\n\r\nmodule.exports = {\r\n    TableModel,\r\n    validateTable,\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMC,GAAG,GAAGD,OAAO,CAAC,KAAK,CAAC;AAE1B,MAAME,WAAW,GAAG,IAAIH,QAAQ,CAACI,MAAM,CAAC;EACpCC,YAAY,EAAE;IACVC,IAAI,EAAEN,QAAQ,CAACI,MAAM,CAACG,KAAK,CAACC,QAAQ;IACpCC,GAAG,EAAE,YAAY;IACjBC,QAAQ,EAAE;EACd,CAAC;EACDC,WAAW,EAAE;IACTL,IAAI,EAAEM,MAAM;IACZF,QAAQ,EAAE;EACd,CAAC;EACDG,QAAQ,EAAE;IACNP,IAAI,EAAEM,MAAM;IACZF,QAAQ,EAAE;EACd,CAAC;EACDI,QAAQ,EAAE,CACN;IACIR,IAAI,EAAES,MAAM;IACZL,QAAQ,EAAE;EACd,CAAC;AAET,CAAC,CAAC;AAEFP,WAAW,CAACa,KAAK,CAAC;EAAEX,YAAY,EAAE,CAAC;EAAEM,WAAW,EAAE;AAAE,CAAC,EAAE;EAAEM,MAAM,EAAE;AAAK,CAAC,CAAC;AAExE,MAAMC,UAAU,GAAGlB,QAAQ,CAACmB,KAAK,CAAC,OAAO,EAAEhB,WAAW,CAAC;;AAEvD;AACA,SAASiB,aAAaA,CAACC,KAAK,EAAE;EAC1B,MAAMC,MAAM,GAAGpB,GAAG,CAACqB,MAAM,CAAC;IACtBlB,YAAY,EAAEH,GAAG,CAACsB,MAAM,CAAC,CAAC,CAACd,QAAQ,CAAC,CAAC;IACrCG,QAAQ,EAAEX,GAAG,CAACuB,MAAM,CAAC,CAAC,CAACf,QAAQ,CAAC,CAAC;IACjCI,QAAQ,EAAEZ,GAAG,CAACwB,KAAK,CAAC,CAAC,CAACC,KAAK,CAACzB,GAAG,CAAC0B,IAAI,CAAC,CAAC,CAAC,CAAClB,QAAQ,CAAC;EACrD,CAAC,CAAC;EAEF,OAAOY,MAAM,CAACO,QAAQ,CAACR,KAAK,CAAC;AACjC;AAEAS,MAAM,CAACC,OAAO,GAAG;EACbb,UAAU;EACVE;AACJ,CAAC"}},"mtime":1706086333475},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\models\\\\ReservationModel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const mongoose = require(\"mongoose\");\nconst Joi = require(\"joi\");\nconst reservationSchema = new mongoose.Schema({\n  restaurantId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"Restaurant\",\n    required: true\n  },\n  tableId: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: \"Table\",\n    required: true\n  },\n  customerName: {\n    type: String,\n    required: true\n  },\n  phone: {\n    type: String,\n    minlength: 5,\n    maxlength: 20,\n    required: true\n  },\n  seats: {\n    type: Number,\n    min: 1,\n    required: true\n  },\n  reservationTime: {\n    type: Date,\n    default: Date.now,\n    required: true\n  }\n});\nconst ReservationModel = mongoose.model(\"Reservation\", reservationSchema);\nfunction validateReservation(reservation) {\n  const schema = Joi.object({\n    restaurantId: Joi.string().required(),\n    tableId: Joi.string().required(),\n    customerName: Joi.string().required(),\n    phone: Joi.string().min(5).max(20),\n    seats: Joi.number().required(),\n    reservationTime: Joi.date().required()\n  });\n  return schema.validate(reservation);\n}\nmodule.exports = {\n  ReservationModel,\n  validateReservation\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJKb2kiLCJyZXNlcnZhdGlvblNjaGVtYSIsIlNjaGVtYSIsInJlc3RhdXJhbnRJZCIsInR5cGUiLCJUeXBlcyIsIk9iamVjdElkIiwicmVmIiwicmVxdWlyZWQiLCJ0YWJsZUlkIiwiY3VzdG9tZXJOYW1lIiwiU3RyaW5nIiwicGhvbmUiLCJtaW5sZW5ndGgiLCJtYXhsZW5ndGgiLCJzZWF0cyIsIk51bWJlciIsIm1pbiIsInJlc2VydmF0aW9uVGltZSIsIkRhdGUiLCJkZWZhdWx0Iiwibm93IiwiUmVzZXJ2YXRpb25Nb2RlbCIsIm1vZGVsIiwidmFsaWRhdGVSZXNlcnZhdGlvbiIsInJlc2VydmF0aW9uIiwic2NoZW1hIiwib2JqZWN0Iiwic3RyaW5nIiwibWF4IiwibnVtYmVyIiwiZGF0ZSIsInZhbGlkYXRlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIYWRhcy0wM1xcRG9jdW1lbnRzXFxmdWxsc3RhY2tcXGJhY2tcXG1vZGVsc1xcIiwic291cmNlcyI6WyJSZXNlcnZhdGlvbk1vZGVsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZShcIm1vbmdvb3NlXCIpO1xyXG5jb25zdCBKb2kgPSByZXF1aXJlKFwiam9pXCIpO1xyXG5cclxuY29uc3QgcmVzZXJ2YXRpb25TY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcclxuICByZXN0YXVyYW50SWQ6IHtcclxuICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgIHJlZjogXCJSZXN0YXVyYW50XCIsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICB9LFxyXG4gIHRhYmxlSWQ6IHtcclxuICAgIHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZCxcclxuICAgIHJlZjogXCJUYWJsZVwiLFxyXG4gICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgfSxcclxuICBjdXN0b21lck5hbWU6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gIH0sXHJcbiAgcGhvbmU6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIG1pbmxlbmd0aDogNSxcclxuICAgIG1heGxlbmd0aDogMjAsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxufSxcclxuICBzZWF0czoge1xyXG4gICAgdHlwZTogTnVtYmVyLFxyXG4gICAgbWluOiAxLFxyXG4gICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgfSxcclxuICByZXNlcnZhdGlvblRpbWU6IHtcclxuICAgIHR5cGU6IERhdGUsXHJcbiAgICBkZWZhdWx0OiBEYXRlLm5vdyxcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuY29uc3QgUmVzZXJ2YXRpb25Nb2RlbCA9IG1vbmdvb3NlLm1vZGVsKFwiUmVzZXJ2YXRpb25cIiwgcmVzZXJ2YXRpb25TY2hlbWEpO1xyXG5cclxuZnVuY3Rpb24gdmFsaWRhdGVSZXNlcnZhdGlvbihyZXNlcnZhdGlvbikge1xyXG4gIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3Qoe1xyXG4gICAgcmVzdGF1cmFudElkOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcclxuICAgIHRhYmxlSWQ6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxyXG4gICAgY3VzdG9tZXJOYW1lOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcclxuICAgIHBob25lOiBKb2kuc3RyaW5nKCkubWluKDUpLm1heCgyMCksXHJcbiAgICBzZWF0czogSm9pLm51bWJlcigpLnJlcXVpcmVkKCksXHJcbiAgICByZXNlcnZhdGlvblRpbWU6IEpvaS5kYXRlKCkucmVxdWlyZWQoKSxcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIHNjaGVtYS52YWxpZGF0ZShyZXNlcnZhdGlvbik7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIFJlc2VydmF0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","map":{"version":3,"names":["mongoose","require","Joi","reservationSchema","Schema","restaurantId","type","Types","ObjectId","ref","required","tableId","customerName","String","phone","minlength","maxlength","seats","Number","min","reservationTime","Date","default","now","ReservationModel","model","validateReservation","reservation","schema","object","string","max","number","date","validate","module","exports"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\models\\","sources":["ReservationModel.js"],"sourcesContent":["const mongoose = require(\"mongoose\");\r\nconst Joi = require(\"joi\");\r\n\r\nconst reservationSchema = new mongoose.Schema({\r\n  restaurantId: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    ref: \"Restaurant\",\r\n    required: true,\r\n  },\r\n  tableId: {\r\n    type: mongoose.Schema.Types.ObjectId,\r\n    ref: \"Table\",\r\n    required: true,\r\n  },\r\n  customerName: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  phone: {\r\n    type: String,\r\n    minlength: 5,\r\n    maxlength: 20,\r\n    required: true,\r\n},\r\n  seats: {\r\n    type: Number,\r\n    min: 1,\r\n    required: true,\r\n  },\r\n  reservationTime: {\r\n    type: Date,\r\n    default: Date.now,\r\n    required: true,\r\n  },\r\n});\r\n\r\nconst ReservationModel = mongoose.model(\"Reservation\", reservationSchema);\r\n\r\nfunction validateReservation(reservation) {\r\n  const schema = Joi.object({\r\n    restaurantId: Joi.string().required(),\r\n    tableId: Joi.string().required(),\r\n    customerName: Joi.string().required(),\r\n    phone: Joi.string().min(5).max(20),\r\n    seats: Joi.number().required(),\r\n    reservationTime: Joi.date().required(),\r\n  });\r\n\r\n  return schema.validate(reservation);\r\n}\r\n\r\nmodule.exports = {\r\n  ReservationModel,\r\n  validateReservation,\r\n};\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMC,GAAG,GAAGD,OAAO,CAAC,KAAK,CAAC;AAE1B,MAAME,iBAAiB,GAAG,IAAIH,QAAQ,CAACI,MAAM,CAAC;EAC5CC,YAAY,EAAE;IACZC,IAAI,EAAEN,QAAQ,CAACI,MAAM,CAACG,KAAK,CAACC,QAAQ;IACpCC,GAAG,EAAE,YAAY;IACjBC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE;IACPL,IAAI,EAAEN,QAAQ,CAACI,MAAM,CAACG,KAAK,CAACC,QAAQ;IACpCC,GAAG,EAAE,OAAO;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDE,YAAY,EAAE;IACZN,IAAI,EAAEO,MAAM;IACZH,QAAQ,EAAE;EACZ,CAAC;EACDI,KAAK,EAAE;IACLR,IAAI,EAAEO,MAAM;IACZE,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE,EAAE;IACbN,QAAQ,EAAE;EACd,CAAC;EACCO,KAAK,EAAE;IACLX,IAAI,EAAEY,MAAM;IACZC,GAAG,EAAE,CAAC;IACNT,QAAQ,EAAE;EACZ,CAAC;EACDU,eAAe,EAAE;IACfd,IAAI,EAAEe,IAAI;IACVC,OAAO,EAAED,IAAI,CAACE,GAAG;IACjBb,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,MAAMc,gBAAgB,GAAGxB,QAAQ,CAACyB,KAAK,CAAC,aAAa,EAAEtB,iBAAiB,CAAC;AAEzE,SAASuB,mBAAmBA,CAACC,WAAW,EAAE;EACxC,MAAMC,MAAM,GAAG1B,GAAG,CAAC2B,MAAM,CAAC;IACxBxB,YAAY,EAAEH,GAAG,CAAC4B,MAAM,CAAC,CAAC,CAACpB,QAAQ,CAAC,CAAC;IACrCC,OAAO,EAAET,GAAG,CAAC4B,MAAM,CAAC,CAAC,CAACpB,QAAQ,CAAC,CAAC;IAChCE,YAAY,EAAEV,GAAG,CAAC4B,MAAM,CAAC,CAAC,CAACpB,QAAQ,CAAC,CAAC;IACrCI,KAAK,EAAEZ,GAAG,CAAC4B,MAAM,CAAC,CAAC,CAACX,GAAG,CAAC,CAAC,CAAC,CAACY,GAAG,CAAC,EAAE,CAAC;IAClCd,KAAK,EAAEf,GAAG,CAAC8B,MAAM,CAAC,CAAC,CAACtB,QAAQ,CAAC,CAAC;IAC9BU,eAAe,EAAElB,GAAG,CAAC+B,IAAI,CAAC,CAAC,CAACvB,QAAQ,CAAC;EACvC,CAAC,CAAC;EAEF,OAAOkB,MAAM,CAACM,QAAQ,CAACP,WAAW,CAAC;AACrC;AAEAQ,MAAM,CAACC,OAAO,GAAG;EACfZ,gBAAgB;EAChBE;AACF,CAAC"}},"mtime":1706166557225},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\routes\\\\routes.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const express = require('express');\nconst router = express.Router();\nconst tableController = require('../controllers/tableController');\nconst restaurantController = require('../controllers/restaurantController');\nconst reservationController = require('../controllers/reservationController');\nconst authMiddleware = require('../middlewares/auth');\n\n// Table routes\nrouter.post('/add-table/:restaurantId', authMiddleware.auth, tableController.addTable);\nrouter.get('/get-tables/:restaurantId', authMiddleware.auth, tableController.getTables);\nrouter.get('/available-table', tableController.getAvailableTable);\nrouter.delete('/delete-table/:restaurantId/:tableId', authMiddleware.auth, tableController.deleteTable);\n\n// Restaurant routes\nrouter.post('/register', restaurantController.register);\nrouter.post('/login', restaurantController.login);\nrouter.get('/restaurants', restaurantController.getRestaurants);\nrouter.get('/restaurant/:restaurantId', restaurantController.getRestaurant);\nrouter.patch('/update-restaurant/:restaurantId', authMiddleware.auth, restaurantController.updateRestaurant);\nrouter.delete('/delete-restaurant/:restaurantId', authMiddleware.auth, restaurantController.deleteRestaurant);\n\n// Reservation routes\nrouter.post('/make-reservation/:restaurantId/:tableId', reservationController.makeReservation);\nrouter.get('/get-reservation/:restaurantId/:reservationId', authMiddleware.auth, reservationController.getReservation);\nrouter.get('/get-reservations/:restaurantId', authMiddleware.auth, reservationController.getReservations);\n\n// Additional routes\nrouter.get(\"/\", (req, res) => {\n  res.json({\n    msg: \"restaurant work\"\n  });\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsInRhYmxlQ29udHJvbGxlciIsInJlc3RhdXJhbnRDb250cm9sbGVyIiwicmVzZXJ2YXRpb25Db250cm9sbGVyIiwiYXV0aE1pZGRsZXdhcmUiLCJwb3N0IiwiYXV0aCIsImFkZFRhYmxlIiwiZ2V0IiwiZ2V0VGFibGVzIiwiZ2V0QXZhaWxhYmxlVGFibGUiLCJkZWxldGUiLCJkZWxldGVUYWJsZSIsInJlZ2lzdGVyIiwibG9naW4iLCJnZXRSZXN0YXVyYW50cyIsImdldFJlc3RhdXJhbnQiLCJwYXRjaCIsInVwZGF0ZVJlc3RhdXJhbnQiLCJkZWxldGVSZXN0YXVyYW50IiwibWFrZVJlc2VydmF0aW9uIiwiZ2V0UmVzZXJ2YXRpb24iLCJnZXRSZXNlcnZhdGlvbnMiLCJyZXEiLCJyZXMiLCJqc29uIiwibXNnIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxIYWRhcy0wM1xcRG9jdW1lbnRzXFxmdWxsc3RhY2tcXGJhY2tcXHJvdXRlc1xcIiwic291cmNlcyI6WyJyb3V0ZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuY29uc3QgdGFibGVDb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvdGFibGVDb250cm9sbGVyJyk7XHJcbmNvbnN0IHJlc3RhdXJhbnRDb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvcmVzdGF1cmFudENvbnRyb2xsZXInKTtcclxuY29uc3QgcmVzZXJ2YXRpb25Db250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvcmVzZXJ2YXRpb25Db250cm9sbGVyJyk7XHJcbmNvbnN0IGF1dGhNaWRkbGV3YXJlID0gcmVxdWlyZSgnLi4vbWlkZGxld2FyZXMvYXV0aCcpO1xyXG5cclxuLy8gVGFibGUgcm91dGVzXHJcbnJvdXRlci5wb3N0KCcvYWRkLXRhYmxlLzpyZXN0YXVyYW50SWQnLGF1dGhNaWRkbGV3YXJlLmF1dGgsIHRhYmxlQ29udHJvbGxlci5hZGRUYWJsZSk7XHJcbnJvdXRlci5nZXQoJy9nZXQtdGFibGVzLzpyZXN0YXVyYW50SWQnLGF1dGhNaWRkbGV3YXJlLmF1dGgsIHRhYmxlQ29udHJvbGxlci5nZXRUYWJsZXMpO1xyXG5yb3V0ZXIuZ2V0KCcvYXZhaWxhYmxlLXRhYmxlJywgdGFibGVDb250cm9sbGVyLmdldEF2YWlsYWJsZVRhYmxlKTtcclxucm91dGVyLmRlbGV0ZSgnL2RlbGV0ZS10YWJsZS86cmVzdGF1cmFudElkLzp0YWJsZUlkJyxhdXRoTWlkZGxld2FyZS5hdXRoLCB0YWJsZUNvbnRyb2xsZXIuZGVsZXRlVGFibGUpO1xyXG5cclxuLy8gUmVzdGF1cmFudCByb3V0ZXNcclxucm91dGVyLnBvc3QoJy9yZWdpc3RlcicsIHJlc3RhdXJhbnRDb250cm9sbGVyLnJlZ2lzdGVyKTtcclxucm91dGVyLnBvc3QoJy9sb2dpbicsIHJlc3RhdXJhbnRDb250cm9sbGVyLmxvZ2luKTtcclxucm91dGVyLmdldCgnL3Jlc3RhdXJhbnRzJywgcmVzdGF1cmFudENvbnRyb2xsZXIuZ2V0UmVzdGF1cmFudHMpO1xyXG5yb3V0ZXIuZ2V0KCcvcmVzdGF1cmFudC86cmVzdGF1cmFudElkJywgcmVzdGF1cmFudENvbnRyb2xsZXIuZ2V0UmVzdGF1cmFudCk7XHJcbnJvdXRlci5wYXRjaCgnL3VwZGF0ZS1yZXN0YXVyYW50LzpyZXN0YXVyYW50SWQnLCBhdXRoTWlkZGxld2FyZS5hdXRoLCByZXN0YXVyYW50Q29udHJvbGxlci51cGRhdGVSZXN0YXVyYW50KTtcclxucm91dGVyLmRlbGV0ZSgnL2RlbGV0ZS1yZXN0YXVyYW50LzpyZXN0YXVyYW50SWQnLCBhdXRoTWlkZGxld2FyZS5hdXRoLCByZXN0YXVyYW50Q29udHJvbGxlci5kZWxldGVSZXN0YXVyYW50KTtcclxuXHJcbi8vIFJlc2VydmF0aW9uIHJvdXRlc1xyXG5yb3V0ZXIucG9zdCgnL21ha2UtcmVzZXJ2YXRpb24vOnJlc3RhdXJhbnRJZC86dGFibGVJZCcsIHJlc2VydmF0aW9uQ29udHJvbGxlci5tYWtlUmVzZXJ2YXRpb24pO1xyXG5yb3V0ZXIuZ2V0KCcvZ2V0LXJlc2VydmF0aW9uLzpyZXN0YXVyYW50SWQvOnJlc2VydmF0aW9uSWQnLGF1dGhNaWRkbGV3YXJlLmF1dGgsIHJlc2VydmF0aW9uQ29udHJvbGxlci5nZXRSZXNlcnZhdGlvbik7XHJcbnJvdXRlci5nZXQoJy9nZXQtcmVzZXJ2YXRpb25zLzpyZXN0YXVyYW50SWQnLGF1dGhNaWRkbGV3YXJlLmF1dGgsIHJlc2VydmF0aW9uQ29udHJvbGxlci5nZXRSZXNlcnZhdGlvbnMpO1xyXG5cclxuXHJcbi8vIEFkZGl0aW9uYWwgcm91dGVzXHJcbnJvdXRlci5nZXQoXCIvXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLmpzb24oeyBtc2c6IFwicmVzdGF1cmFudCB3b3JrXCIgfSk7XHJcbn0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1DLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFNLENBQUMsQ0FBQztBQUMvQixNQUFNQyxlQUFlLEdBQUdILE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQztBQUNqRSxNQUFNSSxvQkFBb0IsR0FBR0osT0FBTyxDQUFDLHFDQUFxQyxDQUFDO0FBQzNFLE1BQU1LLHFCQUFxQixHQUFHTCxPQUFPLENBQUMsc0NBQXNDLENBQUM7QUFDN0UsTUFBTU0sY0FBYyxHQUFHTixPQUFPLENBQUMscUJBQXFCLENBQUM7O0FBRXJEO0FBQ0FDLE1BQU0sQ0FBQ00sSUFBSSxDQUFDLDBCQUEwQixFQUFDRCxjQUFjLENBQUNFLElBQUksRUFBRUwsZUFBZSxDQUFDTSxRQUFRLENBQUM7QUFDckZSLE1BQU0sQ0FBQ1MsR0FBRyxDQUFDLDJCQUEyQixFQUFDSixjQUFjLENBQUNFLElBQUksRUFBRUwsZUFBZSxDQUFDUSxTQUFTLENBQUM7QUFDdEZWLE1BQU0sQ0FBQ1MsR0FBRyxDQUFDLGtCQUFrQixFQUFFUCxlQUFlLENBQUNTLGlCQUFpQixDQUFDO0FBQ2pFWCxNQUFNLENBQUNZLE1BQU0sQ0FBQyxzQ0FBc0MsRUFBQ1AsY0FBYyxDQUFDRSxJQUFJLEVBQUVMLGVBQWUsQ0FBQ1csV0FBVyxDQUFDOztBQUV0RztBQUNBYixNQUFNLENBQUNNLElBQUksQ0FBQyxXQUFXLEVBQUVILG9CQUFvQixDQUFDVyxRQUFRLENBQUM7QUFDdkRkLE1BQU0sQ0FBQ00sSUFBSSxDQUFDLFFBQVEsRUFBRUgsb0JBQW9CLENBQUNZLEtBQUssQ0FBQztBQUNqRGYsTUFBTSxDQUFDUyxHQUFHLENBQUMsY0FBYyxFQUFFTixvQkFBb0IsQ0FBQ2EsY0FBYyxDQUFDO0FBQy9EaEIsTUFBTSxDQUFDUyxHQUFHLENBQUMsMkJBQTJCLEVBQUVOLG9CQUFvQixDQUFDYyxhQUFhLENBQUM7QUFDM0VqQixNQUFNLENBQUNrQixLQUFLLENBQUMsa0NBQWtDLEVBQUViLGNBQWMsQ0FBQ0UsSUFBSSxFQUFFSixvQkFBb0IsQ0FBQ2dCLGdCQUFnQixDQUFDO0FBQzVHbkIsTUFBTSxDQUFDWSxNQUFNLENBQUMsa0NBQWtDLEVBQUVQLGNBQWMsQ0FBQ0UsSUFBSSxFQUFFSixvQkFBb0IsQ0FBQ2lCLGdCQUFnQixDQUFDOztBQUU3RztBQUNBcEIsTUFBTSxDQUFDTSxJQUFJLENBQUMsMENBQTBDLEVBQUVGLHFCQUFxQixDQUFDaUIsZUFBZSxDQUFDO0FBQzlGckIsTUFBTSxDQUFDUyxHQUFHLENBQUMsK0NBQStDLEVBQUNKLGNBQWMsQ0FBQ0UsSUFBSSxFQUFFSCxxQkFBcUIsQ0FBQ2tCLGNBQWMsQ0FBQztBQUNySHRCLE1BQU0sQ0FBQ1MsR0FBRyxDQUFDLGlDQUFpQyxFQUFDSixjQUFjLENBQUNFLElBQUksRUFBRUgscUJBQXFCLENBQUNtQixlQUFlLENBQUM7O0FBR3hHO0FBQ0F2QixNQUFNLENBQUNTLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQ2UsR0FBRyxFQUFFQyxHQUFHLEtBQUs7RUFDMUJBLEdBQUcsQ0FBQ0MsSUFBSSxDQUFDO0lBQUVDLEdBQUcsRUFBRTtFQUFrQixDQUFDLENBQUM7QUFDeEMsQ0FBQyxDQUFDO0FBRUZDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHN0IsTUFBTSJ9","map":{"version":3,"names":["express","require","router","Router","tableController","restaurantController","reservationController","authMiddleware","post","auth","addTable","get","getTables","getAvailableTable","delete","deleteTable","register","login","getRestaurants","getRestaurant","patch","updateRestaurant","deleteRestaurant","makeReservation","getReservation","getReservations","req","res","json","msg","module","exports"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\routes\\","sources":["routes.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst tableController = require('../controllers/tableController');\r\nconst restaurantController = require('../controllers/restaurantController');\r\nconst reservationController = require('../controllers/reservationController');\r\nconst authMiddleware = require('../middlewares/auth');\r\n\r\n// Table routes\r\nrouter.post('/add-table/:restaurantId',authMiddleware.auth, tableController.addTable);\r\nrouter.get('/get-tables/:restaurantId',authMiddleware.auth, tableController.getTables);\r\nrouter.get('/available-table', tableController.getAvailableTable);\r\nrouter.delete('/delete-table/:restaurantId/:tableId',authMiddleware.auth, tableController.deleteTable);\r\n\r\n// Restaurant routes\r\nrouter.post('/register', restaurantController.register);\r\nrouter.post('/login', restaurantController.login);\r\nrouter.get('/restaurants', restaurantController.getRestaurants);\r\nrouter.get('/restaurant/:restaurantId', restaurantController.getRestaurant);\r\nrouter.patch('/update-restaurant/:restaurantId', authMiddleware.auth, restaurantController.updateRestaurant);\r\nrouter.delete('/delete-restaurant/:restaurantId', authMiddleware.auth, restaurantController.deleteRestaurant);\r\n\r\n// Reservation routes\r\nrouter.post('/make-reservation/:restaurantId/:tableId', reservationController.makeReservation);\r\nrouter.get('/get-reservation/:restaurantId/:reservationId',authMiddleware.auth, reservationController.getReservation);\r\nrouter.get('/get-reservations/:restaurantId',authMiddleware.auth, reservationController.getReservations);\r\n\r\n\r\n// Additional routes\r\nrouter.get(\"/\", (req, res) => {\r\n    res.json({ msg: \"restaurant work\" });\r\n});\r\n\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,eAAe,GAAGH,OAAO,CAAC,gCAAgC,CAAC;AACjE,MAAMI,oBAAoB,GAAGJ,OAAO,CAAC,qCAAqC,CAAC;AAC3E,MAAMK,qBAAqB,GAAGL,OAAO,CAAC,sCAAsC,CAAC;AAC7E,MAAMM,cAAc,GAAGN,OAAO,CAAC,qBAAqB,CAAC;;AAErD;AACAC,MAAM,CAACM,IAAI,CAAC,0BAA0B,EAACD,cAAc,CAACE,IAAI,EAAEL,eAAe,CAACM,QAAQ,CAAC;AACrFR,MAAM,CAACS,GAAG,CAAC,2BAA2B,EAACJ,cAAc,CAACE,IAAI,EAAEL,eAAe,CAACQ,SAAS,CAAC;AACtFV,MAAM,CAACS,GAAG,CAAC,kBAAkB,EAAEP,eAAe,CAACS,iBAAiB,CAAC;AACjEX,MAAM,CAACY,MAAM,CAAC,sCAAsC,EAACP,cAAc,CAACE,IAAI,EAAEL,eAAe,CAACW,WAAW,CAAC;;AAEtG;AACAb,MAAM,CAACM,IAAI,CAAC,WAAW,EAAEH,oBAAoB,CAACW,QAAQ,CAAC;AACvDd,MAAM,CAACM,IAAI,CAAC,QAAQ,EAAEH,oBAAoB,CAACY,KAAK,CAAC;AACjDf,MAAM,CAACS,GAAG,CAAC,cAAc,EAAEN,oBAAoB,CAACa,cAAc,CAAC;AAC/DhB,MAAM,CAACS,GAAG,CAAC,2BAA2B,EAAEN,oBAAoB,CAACc,aAAa,CAAC;AAC3EjB,MAAM,CAACkB,KAAK,CAAC,kCAAkC,EAAEb,cAAc,CAACE,IAAI,EAAEJ,oBAAoB,CAACgB,gBAAgB,CAAC;AAC5GnB,MAAM,CAACY,MAAM,CAAC,kCAAkC,EAAEP,cAAc,CAACE,IAAI,EAAEJ,oBAAoB,CAACiB,gBAAgB,CAAC;;AAE7G;AACApB,MAAM,CAACM,IAAI,CAAC,0CAA0C,EAAEF,qBAAqB,CAACiB,eAAe,CAAC;AAC9FrB,MAAM,CAACS,GAAG,CAAC,+CAA+C,EAACJ,cAAc,CAACE,IAAI,EAAEH,qBAAqB,CAACkB,cAAc,CAAC;AACrHtB,MAAM,CAACS,GAAG,CAAC,iCAAiC,EAACJ,cAAc,CAACE,IAAI,EAAEH,qBAAqB,CAACmB,eAAe,CAAC;;AAGxG;AACAvB,MAAM,CAACS,GAAG,CAAC,GAAG,EAAE,CAACe,GAAG,EAAEC,GAAG,KAAK;EAC1BA,GAAG,CAACC,IAAI,CAAC;IAAEC,GAAG,EAAE;EAAkB,CAAC,CAAC;AACxC,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAG7B,MAAM"}},"mtime":1706688532665},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\controllers\\\\tableController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const {\n  RestaurantModel\n} = require(\"../models/RestaurantModel\");\nconst {\n  TableModel,\n  validateTable\n} = require(\"../models/TableModel\");\nconst tableController = {\n  getTables: async (req, res) => {\n    try {\n      const {\n        restaurantId\n      } = req.params;\n      const restaurant = await RestaurantModel.findById(restaurantId);\n      if (!restaurant) {\n        return res.status(404).json({\n          error: \"Restaurant not found\"\n        });\n      }\n      const tables = await TableModel.find({\n        _id: {\n          $in: restaurant.tables\n        }\n      });\n      return res.json(tables);\n    } catch (error) {\n      console.error(\"Error getting tables:\", error.message);\n      return res.status(500).json({\n        error: \"Internal Server Error\"\n      });\n    }\n  },\n  addTable: async (req, res) => {\n    try {\n      const {\n        restaurantId\n      } = req.params;\n      const {\n        capacity\n      } = req.body;\n      const restaurant = await RestaurantModel.findById(restaurantId);\n      if (!restaurant) {\n        console.log(`Restaurant with ID ${restaurantId} does not exist.`);\n        return res.status(404).json({\n          error: \"Restaurant not found\"\n        });\n      }\n\n      // Calculate the new tableNumber based on the length of the tables array\n      const tableNumber = restaurant.tables.length + 1;\n      console.log(restaurant.tables.length);\n      console.log(restaurant.tables);\n      // Create a new table\n      const newTable = new TableModel({\n        capacity,\n        restaurantId,\n        tableNumber\n      });\n      if (validateTable(newTable)) {\n        // Save the new table\n        await newTable.save();\n      } else {\n        return res.status(400).json({\n          error: \"Invalid table\"\n        });\n      }\n\n      // Update the restaurant with the new table\n      const updatedRestaurant = await RestaurantModel.findByIdAndUpdate(restaurantId, {\n        $inc: {\n          capacity: capacity\n        },\n        $push: {\n          tables: newTable._id\n        }\n      }, {\n        new: true\n      });\n      console.log(`Table ${newTable.tableNumber} with capacity ${capacity} added successfully.`);\n      res.json({\n        message: \"Table added successfully\"\n      });\n    } catch (error) {\n      console.error(\"Error adding table:\", error.message);\n      res.status(500).json({\n        error: \"Internal Server Error\"\n      });\n    }\n  },\n  getAvailableTable: async (req, res) => {\n    try {\n      const {\n        restaurantId,\n        date,\n        time,\n        seats\n      } = req.query;\n      console.log(req.query);\n      // Validate date and time\n      const reservationDateTime = new Date(`${date}T${time}`);\n      if (isNaN(reservationDateTime)) {\n        throw new Error(\"Invalid date or time format.\");\n      }\n      const restaurant = await RestaurantModel.findById(restaurantId);\n      if (!restaurant) {\n        return res.status(404).json({\n          error: \"Restaurant not found\"\n        });\n      }\n      const openHour = restaurant.hoursOfOperation.openingHour.getHours();\n      const closeHour = restaurant.hoursOfOperation.closingHour.getHours();\n      const openMinute = restaurant.hoursOfOperation.openingHour.getMinutes();\n      const closeMinute = restaurant.hoursOfOperation.closingHour.getMinutes();\n      // const reservationHour = reservationDateTime.getHours();\n\n      //check the opening and closing hours of the restaurant\n      if (reservationDateTime.getHours() >= closeHour || reservationDateTime.getHours() < openHour) {\n        return res.status(400).json({\n          error: `The requested time is outside the opening and closing hours of the restaurant. Please contact us on ${restaurant.phone}`\n        });\n      }\n      if (reservationDateTime.getHours() == openHour) {\n        if (reservationDateTime.getMinutes() < openMinute) {\n          return res.status(400).json({\n            error: `The requested time is outside the opening hour of the restaurant. Please contact us on ${restaurant.phone}`\n          });\n        }\n      }\n      if (reservationDateTime.getHours() == closeHour - 1) {\n        if (reservationDateTime.getMinutes() > closeMinute) {\n          return res.status(400).json({\n            error: `The requested time is outside the closing hour of the restaurant. Please contact us on ${restaurant.phone}`\n          });\n        }\n      }\n      // check if the reservation is not more seats than the restaurant's seats\n      if (restaurant.limitedSeats < seats) {\n        return res.status(400).json({\n          error: `More seats than the limited amount of seats. Please contact us on ${restaurant.phone}`\n        });\n      }\n\n      // Find all available tables\n      const availableTables = await TableModel.find({\n        restaurantId,\n        capacity: {\n          $gte: seats\n        },\n        // Filter by minimum required seats\n        $or: [{\n          resDates: {\n            $size: 0\n          }\n        },\n        // Tables with no reservations\n        {\n          resDates: {\n            $nin: [reservationDateTime]\n          }\n        } // Tables without the specified date\n        ]\n      });\n\n      // Filter tables based on overlapping reservations\n      const filteredTables = availableTables.filter(table => {\n        const overlappingReservations = table.resDates.filter(reservation => reservationDateTime >= reservation.start && reservationDateTime <= reservation.end);\n        return overlappingReservations.length === 0;\n      });\n\n      // Find the table with the smallest amount of seats but enough for the requested number of seats\n      let selectedTable = null;\n      let minSeats = Infinity;\n      filteredTables.forEach(table => {\n        if (table.capacity >= seats && table.capacity < minSeats) {\n          minSeats = table.capacity;\n          selectedTable = table;\n        }\n      });\n      console.log(selectedTable);\n      if (selectedTable) {\n        return res.json({\n          tableNumber: selectedTable.tableNumber,\n          capacity: selectedTable.capacity,\n          id: selectedTable._id\n        });\n      } else {\n        return res.status(404).json({\n          error: \"No available table with sufficient capacity found.\"\n        });\n      }\n    } catch (error) {\n      console.error(\"Error getting available table:\", error.message);\n      res.status(500).json({\n        error: \"Internal Server Error\"\n      });\n    }\n  },\n  deleteTable: async (req, res) => {\n    try {\n      const {\n        restaurantId,\n        tableId\n      } = req.params;\n      const restaurant = await RestaurantModel.findById(restaurantId);\n      if (!restaurant) {\n        return res.status(404).json({\n          error: \"Restaurant not found\"\n        });\n      }\n      const table = await TableModel.findOneAndDelete({\n        _id: tableId\n      });\n      const tableNumber = table.tableNumber;\n      console.log(table);\n      if (!table) {\n        return res.status(404).json({\n          error: \"Table not found\"\n        });\n      }\n      // Remove the deleted table ID from the restaurant's tables array\n      restaurant.tables = restaurant.tables.filter(id => id.toString() !== tableId);\n      await restaurant.save();\n      console.log(`Table ${tableNumber} deleted successfully.`);\n      res.json({\n        message: `Table ${tableNumber} deleted successfully`\n      });\n    } catch (error) {\n      console.error(\"Error deleting table:\", error.message);\n      res.status(500).json({\n        error: \"Internal Server Error\"\n      });\n    }\n  }\n};\nmodule.exports = tableController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["RestaurantModel","require","TableModel","validateTable","tableController","getTables","req","res","restaurantId","params","restaurant","findById","status","json","error","tables","find","_id","$in","console","message","addTable","capacity","body","log","tableNumber","length","newTable","save","updatedRestaurant","findByIdAndUpdate","$inc","$push","new","getAvailableTable","date","time","seats","query","reservationDateTime","Date","isNaN","Error","openHour","hoursOfOperation","openingHour","getHours","closeHour","closingHour","openMinute","getMinutes","closeMinute","phone","limitedSeats","availableTables","$gte","$or","resDates","$size","$nin","filteredTables","filter","table","overlappingReservations","reservation","start","end","selectedTable","minSeats","Infinity","forEach","id","deleteTable","tableId","findOneAndDelete","toString","module","exports"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\controllers\\","sources":["tableController.js"],"sourcesContent":["const { RestaurantModel } = require(\"../models/RestaurantModel\");\r\nconst { TableModel, validateTable } = require(\"../models/TableModel\");\r\n\r\nconst tableController = {\r\n  getTables: async (req, res) => {\r\n    try {\r\n      const { restaurantId } = req.params;\r\n      const restaurant = await RestaurantModel.findById(restaurantId);\r\n      if (!restaurant) {\r\n        return res.status(404).json({ error: \"Restaurant not found\" });\r\n      }\r\n      const tables = await TableModel.find({\r\n        _id: { $in: restaurant.tables },\r\n      });\r\n      return res.json(tables);\r\n    } catch (error) {\r\n      console.error(\"Error getting tables:\", error.message);\r\n      return res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  },\r\n\r\n  addTable: async (req, res) => {\r\n    try {\r\n      const { restaurantId } = req.params;\r\n      const { capacity } = req.body;\r\n      const restaurant = await RestaurantModel.findById(restaurantId);\r\n\r\n      if (!restaurant) {\r\n        console.log(`Restaurant with ID ${restaurantId} does not exist.`);\r\n        return res.status(404).json({ error: \"Restaurant not found\" });\r\n      }\r\n\r\n      // Calculate the new tableNumber based on the length of the tables array\r\n      const tableNumber = restaurant.tables.length + 1;\r\n      console.log(restaurant.tables.length);\r\n      console.log(restaurant.tables);\r\n      // Create a new table\r\n      const newTable = new TableModel({\r\n        capacity,\r\n        restaurantId,\r\n        tableNumber,\r\n      });\r\n      if (validateTable(newTable)) {\r\n        // Save the new table\r\n        await newTable.save();\r\n      } else {\r\n        return res.status(400).json({ error: \"Invalid table\" });\r\n      }\r\n\r\n      // Update the restaurant with the new table\r\n      const updatedRestaurant = await RestaurantModel.findByIdAndUpdate(\r\n        restaurantId,\r\n        {\r\n          $inc: { capacity: capacity },\r\n          $push: { tables: newTable._id },\r\n        },\r\n        { new: true }\r\n      );\r\n\r\n      console.log(\r\n        `Table ${newTable.tableNumber} with capacity ${capacity} added successfully.`\r\n      );\r\n      res.json({ message: \"Table added successfully\" });\r\n    } catch (error) {\r\n      console.error(\"Error adding table:\", error.message);\r\n      res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  },\r\n\r\n  getAvailableTable: async (req, res) => {\r\n    try {\r\n      const { restaurantId, date, time, seats } = req.query;\r\n      console.log(req.query);\r\n      // Validate date and time\r\n      const reservationDateTime = new Date(`${date}T${time}`);\r\n      if (isNaN(reservationDateTime)) {\r\n        throw new Error(\"Invalid date or time format.\");\r\n      }\r\n\r\n      const restaurant = await RestaurantModel.findById(restaurantId);\r\n      if (!restaurant) {\r\n        return res.status(404).json({ error: \"Restaurant not found\" });\r\n      }\r\n      const openHour = restaurant.hoursOfOperation.openingHour.getHours();\r\n      const closeHour = restaurant.hoursOfOperation.closingHour.getHours();\r\n      const openMinute = restaurant.hoursOfOperation.openingHour.getMinutes();\r\n      const closeMinute = restaurant.hoursOfOperation.closingHour.getMinutes();\r\n      // const reservationHour = reservationDateTime.getHours();\r\n\r\n      //check the opening and closing hours of the restaurant\r\n      if (\r\n        reservationDateTime.getHours() >= closeHour ||\r\n        reservationDateTime.getHours() < openHour\r\n      ) {\r\n        return res.status(400).json({\r\n          error: `The requested time is outside the opening and closing hours of the restaurant. Please contact us on ${restaurant.phone}`,\r\n        });\r\n      }\r\n      if (reservationDateTime.getHours() == openHour) {\r\n        if (reservationDateTime.getMinutes() < openMinute) {\r\n          return res.status(400).json({\r\n            error: `The requested time is outside the opening hour of the restaurant. Please contact us on ${restaurant.phone}`,\r\n          });\r\n        }\r\n      }\r\n      if (reservationDateTime.getHours() == closeHour - 1) {\r\n        if (reservationDateTime.getMinutes() > closeMinute) {\r\n          return res.status(400).json({\r\n            error: `The requested time is outside the closing hour of the restaurant. Please contact us on ${restaurant.phone}`,\r\n          });\r\n        }\r\n      }\r\n      // check if the reservation is not more seats than the restaurant's seats\r\n      if (restaurant.limitedSeats < seats) {\r\n        return res.status(400).json({\r\n          error: `More seats than the limited amount of seats. Please contact us on ${restaurant.phone}`,\r\n        });\r\n      }\r\n\r\n      // Find all available tables\r\n      const availableTables = await TableModel.find({\r\n        restaurantId,\r\n        capacity: { $gte: seats }, // Filter by minimum required seats\r\n        $or: [\r\n          { resDates: { $size: 0 } }, // Tables with no reservations\r\n          { resDates: { $nin: [reservationDateTime] } }, // Tables without the specified date\r\n        ],\r\n      });\r\n\r\n      // Filter tables based on overlapping reservations\r\n      const filteredTables = availableTables.filter((table) => {\r\n        const overlappingReservations = table.resDates.filter(\r\n          (reservation) =>\r\n            reservationDateTime >= reservation.start &&\r\n            reservationDateTime <= reservation.end\r\n        );\r\n\r\n        return overlappingReservations.length === 0;\r\n      });\r\n\r\n      // Find the table with the smallest amount of seats but enough for the requested number of seats\r\n      let selectedTable = null;\r\n      let minSeats = Infinity;\r\n\r\n      filteredTables.forEach((table) => {\r\n        if (table.capacity >= seats && table.capacity < minSeats) {\r\n          minSeats = table.capacity;\r\n          selectedTable = table;\r\n        }\r\n      });\r\n      console.log(selectedTable);\r\n      if (selectedTable) {\r\n        return res.json({\r\n          tableNumber: selectedTable.tableNumber,\r\n          capacity: selectedTable.capacity,\r\n          id: selectedTable._id,\r\n        });\r\n      } else {\r\n        return res.status(404).json({\r\n          error: \"No available table with sufficient capacity found.\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getting available table:\", error.message);\r\n      res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  },\r\n\r\n  deleteTable: async (req, res) => {\r\n    try {\r\n      const { restaurantId, tableId } = req.params;\r\n      const restaurant = await RestaurantModel.findById(restaurantId);\r\n      if (!restaurant) {\r\n        return res.status(404).json({ error: \"Restaurant not found\" });\r\n      }\r\n\r\n      const table = await TableModel.findOneAndDelete({ _id: tableId });\r\n      const tableNumber = table.tableNumber;\r\n      console.log(table);\r\n      if (!table) {\r\n        return res.status(404).json({ error: \"Table not found\" });\r\n      }\r\n      // Remove the deleted table ID from the restaurant's tables array\r\n      restaurant.tables = restaurant.tables.filter(\r\n        (id) => id.toString() !== tableId\r\n      );\r\n\r\n      await restaurant.save();\r\n      console.log(`Table ${tableNumber} deleted successfully.`);\r\n      res.json({ message: `Table ${tableNumber} deleted successfully` });\r\n    } catch (error) {\r\n      console.error(\"Error deleting table:\", error.message);\r\n      res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  },\r\n};\r\n\r\nmodule.exports = tableController;\r\n"],"mappings":"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"}},"mtime":1706695741586},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\controllers\\\\restaurantController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"// const { table } = require('console');\nconst {\n  RestaurantModel,\n  validateRestaurant\n} = require('../models/RestaurantModel');\nconst {\n  TableModel\n} = require('../models/TableModel');\nconst {\n  ReservationModel\n} = require('../models/ReservationModel');\nconst {\n  restart\n} = require('nodemon');\nconst restaurantController = {\n  register: async (req, res) => {\n    try {\n      const {\n        name,\n        email,\n        address,\n        phone,\n        psw,\n        image,\n        limitedSeats,\n        openingHour,\n        closingHour\n      } = req.body;\n      console.log(req.body);\n      if (!name || !email || !address || !phone || !psw || !limitedSeats || !openingHour || !closingHour) {\n        return res.status(400).json({\n          error: 'Missing required fields'\n        });\n      }\n      if (!openingHour || !closingHour) {\n        return res.status(400).json({\n          error: 'Invalid hoursOfOperation format'\n        });\n      }\n      const date = new Date().toISOString().slice(0, 10);\n      const openingHourD = new Date(`${date}T${openingHour}`);\n      const closingHourD = new Date(`${date}T${closingHour}`);\n      if (isNaN(openingHourD) || isNaN(closingHourD)) {\n        throw new Error('Invalid date or time format.');\n      }\n      const existingRestaurant = await RestaurantModel.findOne({\n        email\n      });\n      if (existingRestaurant) {\n        return res.status(400).json({\n          error: 'Email is already in use'\n        });\n      }\n      const newRestaurant = new RestaurantModel({\n        name,\n        email,\n        address,\n        phone,\n        psw,\n        img_url: image,\n        limitedSeats,\n        hoursOfOperation: {\n          openingHour: openingHourD,\n          closingHour: closingHourD\n        }\n      });\n      await newRestaurant.save();\n      res.status(201).json({\n        message: 'Restaurant registered successfully'\n      });\n    } catch (error) {\n      console.error('Error in registration:', error.message);\n      res.status(500).json({\n        error: 'Internal Server Error'\n      });\n    }\n  },\n  login: async (req, res) => {\n    try {\n      const {\n        email,\n        psw\n      } = req.body;\n\n      // Check if the email exists\n      const restaurant = await RestaurantModel.findOne({\n        email\n      }).select('psw');\n      if (!restaurant) {\n        return res.status(401).json({\n          error: 'Invalid email or password'\n        });\n      }\n\n      // Check if the password is correct\n      const passwordMatch = await restaurant.checkPassword(psw);\n      if (!passwordMatch) {\n        return res.status(401).json({\n          error: 'Invalid email or password'\n        });\n      }\n\n      // Generate a JWT token\n      const token = restaurant.generateAuthToken();\n      res.json({\n        token,\n        restaurantId: restaurant._id\n      });\n    } catch (error) {\n      console.error('Error in login:', error.message);\n      res.status(500).json({\n        error: 'Internal Server Error'\n      });\n    }\n  },\n  getRestaurants: async (req, res) => {\n    try {\n      const restaurants = await RestaurantModel.find();\n      res.json(restaurants);\n    } catch (error) {\n      console.error('Error getting restaurants:', error.message);\n      res.status(500).json({\n        error: 'Internal Server Error'\n      });\n    }\n  },\n  getRestaurant: async (req, res) => {\n    try {\n      const {\n        restaurantId\n      } = req.params;\n      const restaurant = await RestaurantModel.findById(restaurantId);\n      if (!restaurant) {\n        return res.status(404).json({\n          error: 'Restaurant not found'\n        });\n      }\n      res.json(restaurant);\n    } catch (error) {\n      console.error('Error getting restaurant:', error.message);\n      res.status(500).json({\n        error: 'Internal Server Error'\n      });\n    }\n  },\n  deleteRestaurant: async (req, res) => {\n    try {\n      const {\n        restaurantId\n      } = req.params;\n\n      // Find and delete the restaurant by ID\n      const restaurant = await RestaurantModel.findOneAndDelete({\n        _id: restaurantId\n      });\n      if (!restaurant) {\n        return res.status(404).json({\n          error: 'Restaurant not found'\n        });\n      }\n\n      // Delete associated tables\n      for (const tableId of restaurant.tables) {\n        const table = await TableModel.findOneAndDelete({\n          _id: tableId\n        });\n        if (!table) {\n          console.log(`Table not found for ID: ${tableId}`);\n          // Handle the case where a table is not found (optional)\n        } else {\n          console.log(`Table ${table.tableNumber} deleted successfully.`);\n        }\n      }\n\n      // Delete associated reservations\n      for (const reservationId of restaurant.reservations) {\n        const reservation = await ReservationModel.findOneAndDelete({\n          _id: reservationId\n        });\n        if (!reservation) {\n          console.log(`Table not found for ID: ${reservationId}`);\n          // Handle the case where a table is not found (optional)\n        } else {\n          console.log(`Table ${reservation.reservationId} deleted successfully.`);\n        }\n      }\n      console.log(`Restaurant deleted successfully.`);\n      res.json({\n        message: 'Restaurant deleted successfully'\n      });\n    } catch (error) {\n      console.error('Error deleting restaurant:', error.message);\n      res.status(500).json({\n        error: 'Internal Server Error'\n      });\n    }\n  },\n  updateRestaurant: async (req, res, next) => {\n    const {\n      restaurantId\n    } = req.params;\n    const {\n      name,\n      email,\n      address,\n      phone,\n      limitedSeats,\n      hoursOfOperation\n    } = req.body;\n    const date = new Date().toISOString().slice(0, 10);\n    console.log(\"date \" + date);\n    const openingHourD = new Date(`${date}T${hoursOfOperation.openingHour}`);\n    const closingHourD = new Date(`${date}T${hoursOfOperation.closingHour}`);\n    console.log(\"opening hours\", openingHourD, \"closing hours\", closingHourD);\n    if (isNaN(openingHourD.getTime()) || isNaN(closingHourD.getTime())) {\n      throw new Error('Invalid date or time format.');\n    }\n    try {\n      const updatedRestaurant = await RestaurantModel.findByIdAndUpdate({\n        _id: restaurantId\n      }, {\n        name,\n        email,\n        address,\n        phone,\n        limitedSeats,\n        hoursOfOperation: {\n          openingHour: openingHourD,\n          closingHour: closingHourD\n        }\n      }, {\n        new: true\n      });\n      if (!updatedRestaurant) {\n        return res.status(404).json({\n          error: 'Restaurant not found'\n        });\n      }\n      res.status(200).json(\"updeted restaurant successfully\");\n    } catch (err) {\n      return next(err);\n    }\n  }\n};\nmodule.exports = restaurantController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZXN0YXVyYW50TW9kZWwiLCJ2YWxpZGF0ZVJlc3RhdXJhbnQiLCJyZXF1aXJlIiwiVGFibGVNb2RlbCIsIlJlc2VydmF0aW9uTW9kZWwiLCJyZXN0YXJ0IiwicmVzdGF1cmFudENvbnRyb2xsZXIiLCJyZWdpc3RlciIsInJlcSIsInJlcyIsIm5hbWUiLCJlbWFpbCIsImFkZHJlc3MiLCJwaG9uZSIsInBzdyIsImltYWdlIiwibGltaXRlZFNlYXRzIiwib3BlbmluZ0hvdXIiLCJjbG9zaW5nSG91ciIsImJvZHkiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwiZGF0ZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInNsaWNlIiwib3BlbmluZ0hvdXJEIiwiY2xvc2luZ0hvdXJEIiwiaXNOYU4iLCJFcnJvciIsImV4aXN0aW5nUmVzdGF1cmFudCIsImZpbmRPbmUiLCJuZXdSZXN0YXVyYW50IiwiaW1nX3VybCIsImhvdXJzT2ZPcGVyYXRpb24iLCJzYXZlIiwibWVzc2FnZSIsImxvZ2luIiwicmVzdGF1cmFudCIsInNlbGVjdCIsInBhc3N3b3JkTWF0Y2giLCJjaGVja1Bhc3N3b3JkIiwidG9rZW4iLCJnZW5lcmF0ZUF1dGhUb2tlbiIsInJlc3RhdXJhbnRJZCIsIl9pZCIsImdldFJlc3RhdXJhbnRzIiwicmVzdGF1cmFudHMiLCJmaW5kIiwiZ2V0UmVzdGF1cmFudCIsInBhcmFtcyIsImZpbmRCeUlkIiwiZGVsZXRlUmVzdGF1cmFudCIsImZpbmRPbmVBbmREZWxldGUiLCJ0YWJsZUlkIiwidGFibGVzIiwidGFibGUiLCJ0YWJsZU51bWJlciIsInJlc2VydmF0aW9uSWQiLCJyZXNlcnZhdGlvbnMiLCJyZXNlcnZhdGlvbiIsInVwZGF0ZVJlc3RhdXJhbnQiLCJuZXh0IiwiZ2V0VGltZSIsInVwZGF0ZWRSZXN0YXVyYW50IiwiZmluZEJ5SWRBbmRVcGRhdGUiLCJuZXciLCJlcnIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEhhZGFzLTAzXFxEb2N1bWVudHNcXGZ1bGxzdGFja1xcYmFja1xcY29udHJvbGxlcnNcXCIsInNvdXJjZXMiOlsicmVzdGF1cmFudENvbnRyb2xsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29uc3QgeyB0YWJsZSB9ID0gcmVxdWlyZSgnY29uc29sZScpO1xyXG5jb25zdCB7IFJlc3RhdXJhbnRNb2RlbCwgdmFsaWRhdGVSZXN0YXVyYW50IH0gPSByZXF1aXJlKCcuLi9tb2RlbHMvUmVzdGF1cmFudE1vZGVsJyk7XHJcbmNvbnN0IHsgVGFibGVNb2RlbCB9ID0gcmVxdWlyZSgnLi4vbW9kZWxzL1RhYmxlTW9kZWwnKTtcclxuY29uc3QgeyBSZXNlcnZhdGlvbk1vZGVsIH0gPSByZXF1aXJlKCcuLi9tb2RlbHMvUmVzZXJ2YXRpb25Nb2RlbCcpO1xyXG5jb25zdCB7IHJlc3RhcnQgfSA9IHJlcXVpcmUoJ25vZGVtb24nKTtcclxuXHJcbmNvbnN0IHJlc3RhdXJhbnRDb250cm9sbGVyID0ge1xyXG4gICAgcmVnaXN0ZXI6IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBjb25zdCB7XHJcbiAgICAgICAgICAgIG5hbWUsXHJcbiAgICAgICAgICAgIGVtYWlsLFxyXG4gICAgICAgICAgICBhZGRyZXNzLFxyXG4gICAgICAgICAgICBwaG9uZSxcclxuICAgICAgICAgICAgcHN3LFxyXG4gICAgICAgICAgICBpbWFnZSxcclxuICAgICAgICAgICAgbGltaXRlZFNlYXRzLFxyXG4gICAgICAgICAgICBvcGVuaW5nSG91cixcclxuICAgICAgICAgICAgY2xvc2luZ0hvdXIsXHJcbiAgICAgICAgICB9ID0gcmVxLmJvZHk7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZyhyZXEuYm9keSk7XHJcbiAgICAgICAgICBpZiAoIW5hbWUgfHwgIWVtYWlsIHx8ICFhZGRyZXNzIHx8ICFwaG9uZSB8fCAhcHN3IHx8ICFsaW1pdGVkU2VhdHMgfHwgIW9wZW5pbmdIb3VyIHx8ICFjbG9zaW5nSG91cikge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ01pc3NpbmcgcmVxdWlyZWQgZmllbGRzJyB9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICAgICBpZiAoIW9wZW5pbmdIb3VyIHx8ICFjbG9zaW5nSG91cikge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ0ludmFsaWQgaG91cnNPZk9wZXJhdGlvbiBmb3JtYXQnIH0pO1xyXG4gICAgICAgICAgfVxyXG4gICAgICBcclxuICAgICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc2xpY2UoMCwgMTApO1xyXG4gICAgICAgICAgY29uc3Qgb3BlbmluZ0hvdXJEID0gbmV3IERhdGUoYCR7ZGF0ZX1UJHtvcGVuaW5nSG91cn1gKTtcclxuICAgICAgICAgIGNvbnN0IGNsb3NpbmdIb3VyRCA9IG5ldyBEYXRlKGAke2RhdGV9VCR7Y2xvc2luZ0hvdXJ9YCk7XHJcbiAgICAgIFxyXG4gICAgICAgICAgaWYgKGlzTmFOKG9wZW5pbmdIb3VyRCkgfHwgaXNOYU4oY2xvc2luZ0hvdXJEKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZGF0ZSBvciB0aW1lIGZvcm1hdC4nKTtcclxuICAgICAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICAgICBjb25zdCBleGlzdGluZ1Jlc3RhdXJhbnQgPSBhd2FpdCBSZXN0YXVyYW50TW9kZWwuZmluZE9uZSh7IGVtYWlsIH0pO1xyXG4gICAgICAgICAgaWYgKGV4aXN0aW5nUmVzdGF1cmFudCkge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ0VtYWlsIGlzIGFscmVhZHkgaW4gdXNlJyB9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICAgICBjb25zdCBuZXdSZXN0YXVyYW50ID0gbmV3IFJlc3RhdXJhbnRNb2RlbCh7XHJcbiAgICAgICAgICAgIG5hbWUsXHJcbiAgICAgICAgICAgIGVtYWlsLFxyXG4gICAgICAgICAgICBhZGRyZXNzLFxyXG4gICAgICAgICAgICBwaG9uZSxcclxuICAgICAgICAgICAgcHN3LFxyXG4gICAgICAgICAgICBpbWdfdXJsOiBpbWFnZSxcclxuICAgICAgICAgICAgbGltaXRlZFNlYXRzLFxyXG4gICAgICAgICAgICBob3Vyc09mT3BlcmF0aW9uOiB7XHJcbiAgICAgICAgICAgICAgb3BlbmluZ0hvdXI6IG9wZW5pbmdIb3VyRCxcclxuICAgICAgICAgICAgICBjbG9zaW5nSG91cjogY2xvc2luZ0hvdXJELFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICBhd2FpdCBuZXdSZXN0YXVyYW50LnNhdmUoKTtcclxuICAgICAgXHJcbiAgICAgICAgICByZXMuc3RhdHVzKDIwMSkuanNvbih7IG1lc3NhZ2U6ICdSZXN0YXVyYW50IHJlZ2lzdGVyZWQgc3VjY2Vzc2Z1bGx5JyB9KTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gcmVnaXN0cmF0aW9uOicsIGVycm9yLm1lc3NhZ2UpO1xyXG4gICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0ludGVybmFsIFNlcnZlciBFcnJvcicgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9LFxyXG4gICAgICBcclxuICAgIGxvZ2luOiBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCB7IGVtYWlsLCBwc3cgfSA9IHJlcS5ib2R5O1xyXG4gICAgICBcclxuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIGVtYWlsIGV4aXN0c1xyXG4gICAgICAgICAgICBjb25zdCByZXN0YXVyYW50ID0gYXdhaXQgUmVzdGF1cmFudE1vZGVsLmZpbmRPbmUoeyBlbWFpbCB9KS5zZWxlY3QoJ3BzdycpO1xyXG4gICAgICAgICAgICBpZiAoIXJlc3RhdXJhbnQpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yOiAnSW52YWxpZCBlbWFpbCBvciBwYXNzd29yZCcgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSBwYXNzd29yZCBpcyBjb3JyZWN0XHJcbiAgICAgICAgICAgIGNvbnN0IHBhc3N3b3JkTWF0Y2ggPSBhd2FpdCByZXN0YXVyYW50LmNoZWNrUGFzc3dvcmQocHN3KTtcclxuICAgICAgICAgICAgaWYgKCFwYXNzd29yZE1hdGNoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBlcnJvcjogJ0ludmFsaWQgZW1haWwgb3IgcGFzc3dvcmQnIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAgICAgICAvLyBHZW5lcmF0ZSBhIEpXVCB0b2tlblxyXG4gICAgICAgICAgICBjb25zdCB0b2tlbiA9IHJlc3RhdXJhbnQuZ2VuZXJhdGVBdXRoVG9rZW4oKTtcclxuICAgICAgXHJcbiAgICAgICAgICAgIHJlcy5qc29uKHsgdG9rZW4sIHJlc3RhdXJhbnRJZDogcmVzdGF1cmFudC5faWQgfSk7XHJcbiAgICAgICAgfWNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiBsb2dpbjonLCBlcnJvci5tZXNzYWdlKTtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0ludGVybmFsIFNlcnZlciBFcnJvcicgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBnZXRSZXN0YXVyYW50czogYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgcmVzdGF1cmFudHMgPSBhd2FpdCBSZXN0YXVyYW50TW9kZWwuZmluZCgpO1xyXG4gICAgICAgICAgICByZXMuanNvbihyZXN0YXVyYW50cyk7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZ2V0dGluZyByZXN0YXVyYW50czonLCBlcnJvci5tZXNzYWdlKTtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0ludGVybmFsIFNlcnZlciBFcnJvcicgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBnZXRSZXN0YXVyYW50OiBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCB7IHJlc3RhdXJhbnRJZCB9ID0gcmVxLnBhcmFtcztcclxuICAgICAgICAgICAgY29uc3QgcmVzdGF1cmFudCA9IGF3YWl0IFJlc3RhdXJhbnRNb2RlbC5maW5kQnlJZChyZXN0YXVyYW50SWQpO1xyXG4gICAgICAgICAgICBpZiAoIXJlc3RhdXJhbnQpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7IGVycm9yOiAnUmVzdGF1cmFudCBub3QgZm91bmQnIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJlcy5qc29uKHJlc3RhdXJhbnQpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBnZXR0aW5nIHJlc3RhdXJhbnQ6JywgZXJyb3IubWVzc2FnZSk7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdJbnRlcm5hbCBTZXJ2ZXIgRXJyb3InIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgZGVsZXRlUmVzdGF1cmFudDogYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgeyByZXN0YXVyYW50SWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgICBcclxuICAgICAgICAgICAgLy8gRmluZCBhbmQgZGVsZXRlIHRoZSByZXN0YXVyYW50IGJ5IElEXHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3RhdXJhbnQgPSBhd2FpdCBSZXN0YXVyYW50TW9kZWwuZmluZE9uZUFuZERlbGV0ZSh7IF9pZDogcmVzdGF1cmFudElkIH0pO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGlmICghcmVzdGF1cmFudCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgZXJyb3I6ICdSZXN0YXVyYW50IG5vdCBmb3VuZCcgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICAgICAvLyBEZWxldGUgYXNzb2NpYXRlZCB0YWJsZXNcclxuICAgICAgICAgICAgZm9yIChjb25zdCB0YWJsZUlkIG9mIHJlc3RhdXJhbnQudGFibGVzKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB0YWJsZSA9IGF3YWl0IFRhYmxlTW9kZWwuZmluZE9uZUFuZERlbGV0ZSh7IF9pZDogdGFibGVJZCB9KTtcclxuICAgIFxyXG4gICAgICAgICAgICAgICAgaWYgKCF0YWJsZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBUYWJsZSBub3QgZm91bmQgZm9yIElEOiAke3RhYmxlSWR9YCk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gSGFuZGxlIHRoZSBjYXNlIHdoZXJlIGEgdGFibGUgaXMgbm90IGZvdW5kIChvcHRpb25hbClcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coYFRhYmxlICR7dGFibGUudGFibGVOdW1iZXJ9IGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5LmApO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBEZWxldGUgYXNzb2NpYXRlZCByZXNlcnZhdGlvbnNcclxuICAgICAgICAgICAgZm9yIChjb25zdCByZXNlcnZhdGlvbklkIG9mIHJlc3RhdXJhbnQucmVzZXJ2YXRpb25zKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByZXNlcnZhdGlvbiA9IGF3YWl0IFJlc2VydmF0aW9uTW9kZWwuZmluZE9uZUFuZERlbGV0ZSh7IF9pZDogcmVzZXJ2YXRpb25JZCB9KTtcclxuICAgIFxyXG4gICAgICAgICAgICAgICAgaWYgKCFyZXNlcnZhdGlvbikge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBUYWJsZSBub3QgZm91bmQgZm9yIElEOiAke3Jlc2VydmF0aW9uSWR9YCk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gSGFuZGxlIHRoZSBjYXNlIHdoZXJlIGEgdGFibGUgaXMgbm90IGZvdW5kIChvcHRpb25hbClcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coYFRhYmxlICR7cmVzZXJ2YXRpb24ucmVzZXJ2YXRpb25JZH0gZGVsZXRlZCBzdWNjZXNzZnVsbHkuYCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgUmVzdGF1cmFudCBkZWxldGVkIHN1Y2Nlc3NmdWxseS5gKTtcclxuICAgICAgICAgICAgcmVzLmpzb24oeyBtZXNzYWdlOiAnUmVzdGF1cmFudCBkZWxldGVkIHN1Y2Nlc3NmdWxseScgfSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZGVsZXRpbmcgcmVzdGF1cmFudDonLCBlcnJvci5tZXNzYWdlKTtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0ludGVybmFsIFNlcnZlciBFcnJvcicgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFxyXG4gICAgdXBkYXRlUmVzdGF1cmFudDogYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgICAgICAgY29uc3QgeyByZXN0YXVyYW50SWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgICAgICAgY29uc3QgeyBuYW1lLCBlbWFpbCwgYWRkcmVzcywgcGhvbmUsIGxpbWl0ZWRTZWF0cywgaG91cnNPZk9wZXJhdGlvbn0gPSByZXEuYm9keTtcclxuICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnNsaWNlKDAsIDEwKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImRhdGUgXCIgKyBkYXRlKTtcclxuICAgIFxyXG4gICAgICAgIGNvbnN0IG9wZW5pbmdIb3VyRCA9IG5ldyBEYXRlKGAke2RhdGV9VCR7aG91cnNPZk9wZXJhdGlvbi5vcGVuaW5nSG91cn1gKTtcclxuICAgICAgICBjb25zdCBjbG9zaW5nSG91ckQgPSBuZXcgRGF0ZShgJHtkYXRlfVQke2hvdXJzT2ZPcGVyYXRpb24uY2xvc2luZ0hvdXJ9YCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJvcGVuaW5nIGhvdXJzXCIsIG9wZW5pbmdIb3VyRCwgXCJjbG9zaW5nIGhvdXJzXCIsIGNsb3NpbmdIb3VyRCk7XHJcbiAgICBcclxuICAgICAgICBpZiAoaXNOYU4ob3BlbmluZ0hvdXJELmdldFRpbWUoKSkgfHwgaXNOYU4oY2xvc2luZ0hvdXJELmdldFRpbWUoKSkpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGRhdGUgb3IgdGltZSBmb3JtYXQuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgdXBkYXRlZFJlc3RhdXJhbnQgPSBhd2FpdCBSZXN0YXVyYW50TW9kZWwuZmluZEJ5SWRBbmRVcGRhdGUoXHJcbiAgICAgICAgICAgICAgICB7IF9pZDogcmVzdGF1cmFudElkIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZSxcclxuICAgICAgICAgICAgICAgICAgICBlbWFpbCxcclxuICAgICAgICAgICAgICAgICAgICBhZGRyZXNzLFxyXG4gICAgICAgICAgICAgICAgICAgIHBob25lLFxyXG4gICAgICAgICAgICAgICAgICAgIGxpbWl0ZWRTZWF0cyxcclxuICAgICAgICAgICAgICAgICAgICBob3Vyc09mT3BlcmF0aW9uOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wZW5pbmdIb3VyOiBvcGVuaW5nSG91ckQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsb3NpbmdIb3VyOiBjbG9zaW5nSG91ckQsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmV3OiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICApO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGlmICghdXBkYXRlZFJlc3RhdXJhbnQpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7IGVycm9yOiAnUmVzdGF1cmFudCBub3QgZm91bmQnIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oXCJ1cGRldGVkIHJlc3RhdXJhbnQgc3VjY2Vzc2Z1bGx5XCIpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgICAgICByZXR1cm4gbmV4dChlcnIpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAg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","map":{"version":3,"names":["RestaurantModel","validateRestaurant","require","TableModel","ReservationModel","restart","restaurantController","register","req","res","name","email","address","phone","psw","image","limitedSeats","openingHour","closingHour","body","console","log","status","json","error","date","Date","toISOString","slice","openingHourD","closingHourD","isNaN","Error","existingRestaurant","findOne","newRestaurant","img_url","hoursOfOperation","save","message","login","restaurant","select","passwordMatch","checkPassword","token","generateAuthToken","restaurantId","_id","getRestaurants","restaurants","find","getRestaurant","params","findById","deleteRestaurant","findOneAndDelete","tableId","tables","table","tableNumber","reservationId","reservations","reservation","updateRestaurant","next","getTime","updatedRestaurant","findByIdAndUpdate","new","err","module","exports"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\controllers\\","sources":["restaurantController.js"],"sourcesContent":["// const { table } = require('console');\r\nconst { RestaurantModel, validateRestaurant } = require('../models/RestaurantModel');\r\nconst { TableModel } = require('../models/TableModel');\r\nconst { ReservationModel } = require('../models/ReservationModel');\r\nconst { restart } = require('nodemon');\r\n\r\nconst restaurantController = {\r\n    register: async (req, res) => {\r\n        try {\r\n          const {\r\n            name,\r\n            email,\r\n            address,\r\n            phone,\r\n            psw,\r\n            image,\r\n            limitedSeats,\r\n            openingHour,\r\n            closingHour,\r\n          } = req.body;\r\n          console.log(req.body);\r\n          if (!name || !email || !address || !phone || !psw || !limitedSeats || !openingHour || !closingHour) {\r\n            return res.status(400).json({ error: 'Missing required fields' });\r\n          }\r\n      \r\n          if (!openingHour || !closingHour) {\r\n            return res.status(400).json({ error: 'Invalid hoursOfOperation format' });\r\n          }\r\n      \r\n          const date = new Date().toISOString().slice(0, 10);\r\n          const openingHourD = new Date(`${date}T${openingHour}`);\r\n          const closingHourD = new Date(`${date}T${closingHour}`);\r\n      \r\n          if (isNaN(openingHourD) || isNaN(closingHourD)) {\r\n            throw new Error('Invalid date or time format.');\r\n          }\r\n      \r\n          const existingRestaurant = await RestaurantModel.findOne({ email });\r\n          if (existingRestaurant) {\r\n            return res.status(400).json({ error: 'Email is already in use' });\r\n          }\r\n      \r\n          const newRestaurant = new RestaurantModel({\r\n            name,\r\n            email,\r\n            address,\r\n            phone,\r\n            psw,\r\n            img_url: image,\r\n            limitedSeats,\r\n            hoursOfOperation: {\r\n              openingHour: openingHourD,\r\n              closingHour: closingHourD,\r\n            },\r\n          });\r\n          await newRestaurant.save();\r\n      \r\n          res.status(201).json({ message: 'Restaurant registered successfully' });\r\n        } catch (error) {\r\n          console.error('Error in registration:', error.message);\r\n          res.status(500).json({ error: 'Internal Server Error' });\r\n        }\r\n      },\r\n      \r\n    login: async (req, res) => {\r\n        try {\r\n            const { email, psw } = req.body;\r\n      \r\n            // Check if the email exists\r\n            const restaurant = await RestaurantModel.findOne({ email }).select('psw');\r\n            if (!restaurant) {\r\n                return res.status(401).json({ error: 'Invalid email or password' });\r\n            }\r\n      \r\n            // Check if the password is correct\r\n            const passwordMatch = await restaurant.checkPassword(psw);\r\n            if (!passwordMatch) {\r\n                return res.status(401).json({ error: 'Invalid email or password' });\r\n            }\r\n      \r\n            // Generate a JWT token\r\n            const token = restaurant.generateAuthToken();\r\n      \r\n            res.json({ token, restaurantId: restaurant._id });\r\n        }catch (error) {\r\n            console.error('Error in login:', error.message);\r\n            res.status(500).json({ error: 'Internal Server Error' });\r\n        }\r\n    },\r\n\r\n    getRestaurants: async (req, res) => {\r\n        try {\r\n            const restaurants = await RestaurantModel.find();\r\n            res.json(restaurants);\r\n        } catch (error) {\r\n            console.error('Error getting restaurants:', error.message);\r\n            res.status(500).json({ error: 'Internal Server Error' });\r\n        }\r\n    },\r\n\r\n    getRestaurant: async (req, res) => {\r\n        try {\r\n            const { restaurantId } = req.params;\r\n            const restaurant = await RestaurantModel.findById(restaurantId);\r\n            if (!restaurant) {\r\n                return res.status(404).json({ error: 'Restaurant not found' });\r\n            }\r\n            res.json(restaurant);\r\n            \r\n        } catch (error) {\r\n            console.error('Error getting restaurant:', error.message);\r\n            res.status(500).json({ error: 'Internal Server Error' });\r\n        }\r\n    },\r\n\r\n    deleteRestaurant: async (req, res) => {\r\n        try {\r\n            const { restaurantId } = req.params;\r\n    \r\n            // Find and delete the restaurant by ID\r\n            const restaurant = await RestaurantModel.findOneAndDelete({ _id: restaurantId });\r\n    \r\n            if (!restaurant) {\r\n                return res.status(404).json({ error: 'Restaurant not found' });\r\n            }\r\n    \r\n            // Delete associated tables\r\n            for (const tableId of restaurant.tables) {\r\n                const table = await TableModel.findOneAndDelete({ _id: tableId });\r\n    \r\n                if (!table) {\r\n                    console.log(`Table not found for ID: ${tableId}`);\r\n                    // Handle the case where a table is not found (optional)\r\n                } else {\r\n                    console.log(`Table ${table.tableNumber} deleted successfully.`);\r\n                }\r\n            }\r\n\r\n            // Delete associated reservations\r\n            for (const reservationId of restaurant.reservations) {\r\n                const reservation = await ReservationModel.findOneAndDelete({ _id: reservationId });\r\n    \r\n                if (!reservation) {\r\n                    console.log(`Table not found for ID: ${reservationId}`);\r\n                    // Handle the case where a table is not found (optional)\r\n                } else {\r\n                    console.log(`Table ${reservation.reservationId} deleted successfully.`);\r\n                }\r\n            }\r\n    \r\n            console.log(`Restaurant deleted successfully.`);\r\n            res.json({ message: 'Restaurant deleted successfully' });\r\n        } catch (error) {\r\n            console.error('Error deleting restaurant:', error.message);\r\n            res.status(500).json({ error: 'Internal Server Error' });\r\n        }\r\n    },\r\n    \r\n    updateRestaurant: async (req, res, next) => {\r\n        const { restaurantId } = req.params;\r\n        const { name, email, address, phone, limitedSeats, hoursOfOperation} = req.body;\r\n        const date = new Date().toISOString().slice(0, 10);\r\n        console.log(\"date \" + date);\r\n    \r\n        const openingHourD = new Date(`${date}T${hoursOfOperation.openingHour}`);\r\n        const closingHourD = new Date(`${date}T${hoursOfOperation.closingHour}`);\r\n        console.log(\"opening hours\", openingHourD, \"closing hours\", closingHourD);\r\n    \r\n        if (isNaN(openingHourD.getTime()) || isNaN(closingHourD.getTime())) {\r\n            throw new Error('Invalid date or time format.');\r\n        }\r\n    \r\n        try {\r\n            const updatedRestaurant = await RestaurantModel.findByIdAndUpdate(\r\n                { _id: restaurantId },\r\n                {\r\n                    name,\r\n                    email,\r\n                    address,\r\n                    phone,\r\n                    limitedSeats,\r\n                    hoursOfOperation: {\r\n                        openingHour: openingHourD,\r\n                        closingHour: closingHourD,\r\n                    },\r\n                },\r\n                {\r\n                    new: true,\r\n                }\r\n            );\r\n    \r\n            if (!updatedRestaurant) {\r\n                return res.status(404).json({ error: 'Restaurant not found' });\r\n            }\r\n    \r\n            res.status(200).json(\"updeted restaurant successfully\");\r\n        } catch (err) {\r\n            return next(err);\r\n        }\r\n    },\r\n    \r\n};\r\n\r\nmodule.exports = restaurantController;\r\n"],"mappings":"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"}},"mtime":1706683017482},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"filename\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\\\\controllers\\\\reservationController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Hadas-03\\\\Documents\\\\fullstack\\\\back\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.7:development":{"value":{"code":"const {\n  ReservationModel,\n  validateReservation\n} = require(\"../models/ReservationModel\");\nconst {\n  RestaurantModel,\n  validateRestaurant\n} = require(\"../models/RestaurantModel\");\nconst {\n  TableModel,\n  validateTable\n} = require(\"../models/TableModel\");\nconst reservationController = {\n  makeReservation: async (req, res) => {\n    try {\n      const {\n        restaurantId,\n        tableId\n      } = req.params;\n      const {\n        customerName,\n        reservationTime,\n        seats,\n        phone\n      } = req.body;\n      const restaurant = await RestaurantModel.findById(restaurantId);\n      const table = await TableModel.findById(tableId);\n      console.log(\"restaurant:\", restaurant);\n      console.log(\"table:\", table);\n      if (restaurant && table) {\n        // Check if the reservationTime is a valid date\n        const desiredDateTime = new Date(reservationTime);\n        if (isNaN(desiredDateTime)) {\n          console.log(\"Invalid date or time format.\");\n          return res.status(400).json({\n            error: \"Invalid date or time format.\"\n          });\n        }\n\n        // Check if the table is available at the specified time\n        const reservationEnd = new Date(desiredDateTime.getTime() + 1 * 60 * 60 * 1000);\n        const overlappingReservations = table.resDates.filter(reservation => desiredDateTime >= reservation.start && desiredDateTime <= reservation.end);\n        if (overlappingReservations.length === 0) {\n          // Table is available, make reservation\n          console.log(\"1\" + reservationTime);\n          table.resDates.push({\n            start: desiredDateTime,\n            end: reservationEnd\n          });\n          await table.save();\n\n          // Save the reservation in the ReservationModel\n          const newReservation = new ReservationModel({\n            restaurantId,\n            tableId,\n            customerName,\n            reservationTime,\n            seats,\n            phone\n          });\n          if (validateReservation(newReservation)) {\n            await newReservation.save();\n          } else {\n            return res.status(400).json({\n              error: \"Invalid reservation\"\n            });\n          }\n          // Update the restaurant with the new table\n          const updatedRestaurant = await RestaurantModel.findByIdAndUpdate(restaurantId, {\n            $push: {\n              reservations: newReservation._id\n            }\n          }, {\n            new: true\n          });\n          console.log(`Reservation for Table ${table.tableNumber} at ${reservationTime} for ${customerName} successful.`);\n          return res.json({\n            message: \"Reservation successful\"\n          });\n        } else {\n          console.log(`Table ${table.tableNumber} is already reserved at ${reservationTime}.`);\n          return res.status(400).json({\n            error: \"Table is already reserved\"\n          });\n        }\n      } else {\n        console.log(`Restaurant or Table does not exist.`);\n        return res.status(404).json({\n          error: \"Restaurant or Table does not exist.\"\n        });\n      }\n    } catch (error) {\n      console.error(\"Error making reservation:\", error.message);\n      return res.status(500).json({\n        error: \"Internal Server Error\"\n      });\n    }\n  },\n  getReservations: async (req, res) => {\n    try {\n      const {\n        restaurantId\n      } = req.params;\n      const restaurant = await RestaurantModel.findById(restaurantId);\n      if (!restaurant) {\n        return res.status(404).json({\n          error: \"Restaurant not found\"\n        });\n      }\n      const reservations = await ReservationModel.find({\n        _id: {\n          $in: restaurant.reservations\n        }\n      });\n      return res.json(reservations);\n    } catch (error) {\n      console.error(\"Error getting reservations:\", error.message);\n      return res.status(500).json({\n        error: \"Internal Server Error\"\n      });\n    }\n  },\n  getReservation: async (req, res) => {\n    try {\n      const {\n        restaurantId,\n        reservationId\n      } = req.params;\n      const restaurant = await RestaurantModel.findById(restaurantId);\n      if (!restaurant) {\n        return res.status(404).json({\n          error: \"Restaurant not found\"\n        });\n      }\n      const reservation = await ReservationModel.findOne({\n        _id: reservationId,\n        restaurantId: restaurantId\n      });\n      if (!reservation) {\n        return res.status(404).json({\n          error: \"Reservation not found\"\n        });\n      }\n      return res.json(reservation);\n    } catch (error) {\n      console.error(\"Error getting reservation:\", error.message);\n      return res.status(500).json({\n        error: \"Internal Server Error\"\n      });\n    }\n  }\n};\nmodule.exports = reservationController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["ReservationModel","validateReservation","require","RestaurantModel","validateRestaurant","TableModel","validateTable","reservationController","makeReservation","req","res","restaurantId","tableId","params","customerName","reservationTime","seats","phone","body","restaurant","findById","table","console","log","desiredDateTime","Date","isNaN","status","json","error","reservationEnd","getTime","overlappingReservations","resDates","filter","reservation","start","end","length","push","save","newReservation","updatedRestaurant","findByIdAndUpdate","$push","reservations","_id","new","tableNumber","message","getReservations","find","$in","getReservation","reservationId","findOne","module","exports"],"sourceRoot":"C:\\Users\\Hadas-03\\Documents\\fullstack\\back\\controllers\\","sources":["reservationController.js"],"sourcesContent":["const {\r\n  ReservationModel,\r\n  validateReservation,\r\n} = require(\"../models/ReservationModel\");\r\nconst {\r\n  RestaurantModel,\r\n  validateRestaurant,\r\n} = require(\"../models/RestaurantModel\");\r\nconst { TableModel, validateTable } = require(\"../models/TableModel\");\r\n\r\nconst reservationController = {\r\n  makeReservation: async (req, res) => {\r\n    try {\r\n      const { restaurantId, tableId } = req.params;\r\n      const { customerName, reservationTime, seats, phone } = req.body;\r\n\r\n      const restaurant = await RestaurantModel.findById(restaurantId);\r\n      const table = await TableModel.findById(tableId);\r\n\r\n      console.log(\"restaurant:\", restaurant);\r\n      console.log(\"table:\", table);\r\n      if (restaurant && table) {\r\n        // Check if the reservationTime is a valid date\r\n        const desiredDateTime = new Date(reservationTime);\r\n        if (isNaN(desiredDateTime)) {\r\n          console.log(\"Invalid date or time format.\");\r\n          return res\r\n            .status(400)\r\n            .json({ error: \"Invalid date or time format.\" });\r\n        }\r\n\r\n        // Check if the table is available at the specified time\r\n        const reservationEnd = new Date(\r\n          desiredDateTime.getTime() + 1 * 60 * 60 * 1000\r\n        );\r\n        const overlappingReservations = table.resDates.filter(\r\n          (reservation) =>\r\n            desiredDateTime >= reservation.start &&\r\n            desiredDateTime <= reservation.end\r\n        );\r\n\r\n        if (overlappingReservations.length === 0) {\r\n          // Table is available, make reservation\r\n          console.log(\"1\" + reservationTime);\r\n          table.resDates.push({ start: desiredDateTime, end: reservationEnd });\r\n          await table.save();\r\n\r\n          // Save the reservation in the ReservationModel\r\n          const newReservation = new ReservationModel({\r\n            restaurantId,\r\n            tableId,\r\n            customerName,\r\n            reservationTime,\r\n            seats,\r\n            phone,\r\n          });\r\n          if (validateReservation(newReservation)) {\r\n            await newReservation.save();\r\n          } else {\r\n            return res.status(400).json({ error: \"Invalid reservation\" });\r\n          }\r\n          // Update the restaurant with the new table\r\n          const updatedRestaurant = await RestaurantModel.findByIdAndUpdate(\r\n            restaurantId,\r\n            {\r\n              $push: { reservations: newReservation._id },\r\n            },\r\n            { new: true }\r\n          );\r\n          console.log(\r\n            `Reservation for Table ${table.tableNumber} at ${reservationTime} for ${customerName} successful.`\r\n          );\r\n          return res.json({ message: \"Reservation successful\" });\r\n        } else {\r\n          console.log(\r\n            `Table ${table.tableNumber} is already reserved at ${reservationTime}.`\r\n          );\r\n          return res.status(400).json({ error: \"Table is already reserved\" });\r\n        }\r\n      } else {\r\n        console.log(`Restaurant or Table does not exist.`);\r\n        return res\r\n          .status(404)\r\n          .json({ error: \"Restaurant or Table does not exist.\" });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error making reservation:\", error.message);\r\n      return res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  },\r\n\r\n  getReservations: async (req, res) => {\r\n    try {\r\n      const { restaurantId } = req.params;\r\n\r\n      const restaurant = await RestaurantModel.findById(restaurantId);\r\n      if (!restaurant) {\r\n        return res.status(404).json({ error: \"Restaurant not found\" });\r\n      }\r\n\r\n      const reservations = await ReservationModel.find({\r\n        _id: { $in: restaurant.reservations },\r\n      });\r\n\r\n      return res.json(reservations);\r\n    } catch (error) {\r\n      console.error(\"Error getting reservations:\", error.message);\r\n      return res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  },\r\n\r\n  getReservation: async (req, res) => {\r\n    try {\r\n      const { restaurantId, reservationId } = req.params;\r\n\r\n      const restaurant = await RestaurantModel.findById(restaurantId);\r\n      if (!restaurant) {\r\n        return res.status(404).json({ error: \"Restaurant not found\" });\r\n      }\r\n\r\n      const reservation = await ReservationModel.findOne({\r\n        _id: reservationId,\r\n        restaurantId: restaurantId,\r\n      });\r\n\r\n      if (!reservation) {\r\n        return res.status(404).json({ error: \"Reservation not found\" });\r\n      }\r\n\r\n      return res.json(reservation);\r\n    } catch (error) {\r\n      console.error(\"Error getting reservation:\", error.message);\r\n      return res.status(500).json({ error: \"Internal Server Error\" });\r\n    }\r\n  },\r\n};\r\n\r\nmodule.exports = reservationController;\r\n"],"mappings":"AAAA,MAAM;EACJA,gBAAgB;EAChBC;AACF,CAAC,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACzC,MAAM;EACJC,eAAe;EACfC;AACF,CAAC,GAAGF,OAAO,CAAC,2BAA2B,CAAC;AACxC,MAAM;EAAEG,UAAU;EAAEC;AAAc,CAAC,GAAGJ,OAAO,CAAC,sBAAsB,CAAC;AAErE,MAAMK,qBAAqB,GAAG;EAC5BC,eAAe,EAAE,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;IACnC,IAAI;MACF,MAAM;QAAEC,YAAY;QAAEC;MAAQ,CAAC,GAAGH,GAAG,CAACI,MAAM;MAC5C,MAAM;QAAEC,YAAY;QAAEC,eAAe;QAAEC,KAAK;QAAEC;MAAM,CAAC,GAAGR,GAAG,CAACS,IAAI;MAEhE,MAAMC,UAAU,GAAG,MAAMhB,eAAe,CAACiB,QAAQ,CAACT,YAAY,CAAC;MAC/D,MAAMU,KAAK,GAAG,MAAMhB,UAAU,CAACe,QAAQ,CAACR,OAAO,CAAC;MAEhDU,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,UAAU,CAAC;MACtCG,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC;MAC5B,IAAIF,UAAU,IAAIE,KAAK,EAAE;QACvB;QACA,MAAMG,eAAe,GAAG,IAAIC,IAAI,CAACV,eAAe,CAAC;QACjD,IAAIW,KAAK,CAACF,eAAe,CAAC,EAAE;UAC1BF,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;UAC3C,OAAOb,GAAG,CACPiB,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;YAAEC,KAAK,EAAE;UAA+B,CAAC,CAAC;QACpD;;QAEA;QACA,MAAMC,cAAc,GAAG,IAAIL,IAAI,CAC7BD,eAAe,CAACO,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAC5C,CAAC;QACD,MAAMC,uBAAuB,GAAGX,KAAK,CAACY,QAAQ,CAACC,MAAM,CAClDC,WAAW,IACVX,eAAe,IAAIW,WAAW,CAACC,KAAK,IACpCZ,eAAe,IAAIW,WAAW,CAACE,GACnC,CAAC;QAED,IAAIL,uBAAuB,CAACM,MAAM,KAAK,CAAC,EAAE;UACxC;UACAhB,OAAO,CAACC,GAAG,CAAC,GAAG,GAAGR,eAAe,CAAC;UAClCM,KAAK,CAACY,QAAQ,CAACM,IAAI,CAAC;YAAEH,KAAK,EAAEZ,eAAe;YAAEa,GAAG,EAAEP;UAAe,CAAC,CAAC;UACpE,MAAMT,KAAK,CAACmB,IAAI,CAAC,CAAC;;UAElB;UACA,MAAMC,cAAc,GAAG,IAAIzC,gBAAgB,CAAC;YAC1CW,YAAY;YACZC,OAAO;YACPE,YAAY;YACZC,eAAe;YACfC,KAAK;YACLC;UACF,CAAC,CAAC;UACF,IAAIhB,mBAAmB,CAACwC,cAAc,CAAC,EAAE;YACvC,MAAMA,cAAc,CAACD,IAAI,CAAC,CAAC;UAC7B,CAAC,MAAM;YACL,OAAO9B,GAAG,CAACiB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;cAAEC,KAAK,EAAE;YAAsB,CAAC,CAAC;UAC/D;UACA;UACA,MAAMa,iBAAiB,GAAG,MAAMvC,eAAe,CAACwC,iBAAiB,CAC/DhC,YAAY,EACZ;YACEiC,KAAK,EAAE;cAAEC,YAAY,EAAEJ,cAAc,CAACK;YAAI;UAC5C,CAAC,EACD;YAAEC,GAAG,EAAE;UAAK,CACd,CAAC;UACDzB,OAAO,CAACC,GAAG,CACR,yBAAwBF,KAAK,CAAC2B,WAAY,OAAMjC,eAAgB,QAAOD,YAAa,cACvF,CAAC;UACD,OAAOJ,GAAG,CAACkB,IAAI,CAAC;YAAEqB,OAAO,EAAE;UAAyB,CAAC,CAAC;QACxD,CAAC,MAAM;UACL3B,OAAO,CAACC,GAAG,CACR,SAAQF,KAAK,CAAC2B,WAAY,2BAA0BjC,eAAgB,GACvE,CAAC;UACD,OAAOL,GAAG,CAACiB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YAAEC,KAAK,EAAE;UAA4B,CAAC,CAAC;QACrE;MACF,CAAC,MAAM;QACLP,OAAO,CAACC,GAAG,CAAE,qCAAoC,CAAC;QAClD,OAAOb,GAAG,CACPiB,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;UAAEC,KAAK,EAAE;QAAsC,CAAC,CAAC;MAC3D;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACoB,OAAO,CAAC;MACzD,OAAOvC,GAAG,CAACiB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,KAAK,EAAE;MAAwB,CAAC,CAAC;IACjE;EACF,CAAC;EAEDqB,eAAe,EAAE,MAAAA,CAAOzC,GAAG,EAAEC,GAAG,KAAK;IACnC,IAAI;MACF,MAAM;QAAEC;MAAa,CAAC,GAAGF,GAAG,CAACI,MAAM;MAEnC,MAAMM,UAAU,GAAG,MAAMhB,eAAe,CAACiB,QAAQ,CAACT,YAAY,CAAC;MAC/D,IAAI,CAACQ,UAAU,EAAE;QACf,OAAOT,GAAG,CAACiB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEC,KAAK,EAAE;QAAuB,CAAC,CAAC;MAChE;MAEA,MAAMgB,YAAY,GAAG,MAAM7C,gBAAgB,CAACmD,IAAI,CAAC;QAC/CL,GAAG,EAAE;UAAEM,GAAG,EAAEjC,UAAU,CAAC0B;QAAa;MACtC,CAAC,CAAC;MAEF,OAAOnC,GAAG,CAACkB,IAAI,CAACiB,YAAY,CAAC;IAC/B,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACoB,OAAO,CAAC;MAC3D,OAAOvC,GAAG,CAACiB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,KAAK,EAAE;MAAwB,CAAC,CAAC;IACjE;EACF,CAAC;EAEDwB,cAAc,EAAE,MAAAA,CAAO5C,GAAG,EAAEC,GAAG,KAAK;IAClC,IAAI;MACF,MAAM;QAAEC,YAAY;QAAE2C;MAAc,CAAC,GAAG7C,GAAG,CAACI,MAAM;MAElD,MAAMM,UAAU,GAAG,MAAMhB,eAAe,CAACiB,QAAQ,CAACT,YAAY,CAAC;MAC/D,IAAI,CAACQ,UAAU,EAAE;QACf,OAAOT,GAAG,CAACiB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEC,KAAK,EAAE;QAAuB,CAAC,CAAC;MAChE;MAEA,MAAMM,WAAW,GAAG,MAAMnC,gBAAgB,CAACuD,OAAO,CAAC;QACjDT,GAAG,EAAEQ,aAAa;QAClB3C,YAAY,EAAEA;MAChB,CAAC,CAAC;MAEF,IAAI,CAACwB,WAAW,EAAE;QAChB,OAAOzB,GAAG,CAACiB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEC,KAAK,EAAE;QAAwB,CAAC,CAAC;MACjE;MAEA,OAAOnB,GAAG,CAACkB,IAAI,CAACO,WAAW,CAAC;IAC9B,CAAC,CAAC,OAAON,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACoB,OAAO,CAAC;MAC1D,OAAOvC,GAAG,CAACiB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,KAAK,EAAE;MAAwB,CAAC,CAAC;IACjE;EACF;AACF,CAAC;AAED2B,MAAM,CAACC,OAAO,GAAGlD,qBAAqB"}},"mtime":1706168281515}}